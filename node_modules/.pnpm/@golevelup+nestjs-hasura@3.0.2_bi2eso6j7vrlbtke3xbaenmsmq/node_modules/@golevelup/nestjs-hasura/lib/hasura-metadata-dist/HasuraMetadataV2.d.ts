export var __esModule: boolean;
export var ActionDefinitionType: {};
export var CustomTypeObjectRelationshipType: {};
export var Columns: {};
export class Convert {
    static toPGColumn(json: any): any;
    static pGColumnToJson(value: any): string;
    static toComputedFieldName(json: any): any;
    static computedFieldNameToJson(value: any): string;
    static toRoleName(json: any): any;
    static roleNameToJson(value: any): string;
    static toTriggerName(json: any): any;
    static triggerNameToJson(value: any): string;
    static toRemoteRelationshipName(json: any): any;
    static remoteRelationshipNameToJson(value: any): string;
    static toRemoteSchemaName(json: any): any;
    static remoteSchemaNameToJson(value: any): string;
    static toCollectionName(json: any): any;
    static collectionNameToJson(value: any): string;
    static toGraphQLName(json: any): any;
    static graphQLNameToJson(value: any): string;
    static toGraphQLType(json: any): any;
    static graphQLTypeToJson(value: any): string;
    static toRelationshipName(json: any): any;
    static relationshipNameToJson(value: any): string;
    static toActionName(json: any): any;
    static actionNameToJson(value: any): string;
    static toWebhookURL(json: any): any;
    static webhookURLToJson(value: any): string;
    static toTableName(json: any): any;
    static tableNameToJson(value: any): string;
    static toQualifiedTable(json: any): any;
    static qualifiedTableToJson(value: any): string;
    static toTableConfig(json: any): any;
    static tableConfigToJson(value: any): string;
    static toTableEntry(json: any): any;
    static tableEntryToJson(value: any): string;
    static toCustomRootFields(json: any): any;
    static customRootFieldsToJson(value: any): string;
    static toCustomColumnNames(json: any): any;
    static customColumnNamesToJson(value: any): string;
    static toFunctionName(json: any): any;
    static functionNameToJson(value: any): string;
    static toQualifiedFunction(json: any): any;
    static qualifiedFunctionToJson(value: any): string;
    static toCustomFunction(json: any): any;
    static customFunctionToJson(value: any): string;
    static toFunctionConfiguration(json: any): any;
    static functionConfigurationToJson(value: any): string;
    static toObjectRelationship(json: any): any;
    static objectRelationshipToJson(value: any): string;
    static toObjRelUsing(json: any): any;
    static objRelUsingToJson(value: any): string;
    static toObjRelUsingManualMapping(json: any): any;
    static objRelUsingManualMappingToJson(value: any): string;
    static toArrayRelationship(json: any): any;
    static arrayRelationshipToJson(value: any): string;
    static toArrRelUsing(json: any): any;
    static arrRelUsingToJson(value: any): string;
    static toArrRelUsingFKeyOn(json: any): any;
    static arrRelUsingFKeyOnToJson(value: any): string;
    static toArrRelUsingManualMapping(json: any): any;
    static arrRelUsingManualMappingToJson(value: any): string;
    static toColumnPresetsExpression(json: any): any;
    static columnPresetsExpressionToJson(value: any): string;
    static toInsertPermissionEntry(json: any): any;
    static insertPermissionEntryToJson(value: any): string;
    static toInsertPermission(json: any): any;
    static insertPermissionToJson(value: any): string;
    static toSelectPermissionEntry(json: any): any;
    static selectPermissionEntryToJson(value: any): string;
    static toSelectPermission(json: any): any;
    static selectPermissionToJson(value: any): string;
    static toUpdatePermissionEntry(json: any): any;
    static updatePermissionEntryToJson(value: any): string;
    static toUpdatePermission(json: any): any;
    static updatePermissionToJson(value: any): string;
    static toDeletePermissionEntry(json: any): any;
    static deletePermissionEntryToJson(value: any): string;
    static toDeletePermission(json: any): any;
    static deletePermissionToJson(value: any): string;
    static toComputedField(json: any): any;
    static computedFieldToJson(value: any): string;
    static toComputedFieldDefinition(json: any): any;
    static computedFieldDefinitionToJson(value: any): string;
    static toEventTrigger(json: any): any;
    static eventTriggerToJson(value: any): string;
    static toEventTriggerDefinition(json: any): any;
    static eventTriggerDefinitionToJson(value: any): string;
    static toEventTriggerColumns(json: any): any;
    static eventTriggerColumnsToJson(value: any): string;
    static toOperationSpec(json: any): any;
    static operationSpecToJson(value: any): string;
    static toHeaderFromValue(json: any): any;
    static headerFromValueToJson(value: any): string;
    static toHeaderFromEnv(json: any): any;
    static headerFromEnvToJson(value: any): string;
    static toRetryConf(json: any): any;
    static retryConfToJson(value: any): string;
    static toCronTrigger(json: any): any;
    static cronTriggerToJson(value: any): string;
    static toRetryConfST(json: any): any;
    static retryConfSTToJson(value: any): string;
    static toRemoteSchema(json: any): any;
    static remoteSchemaToJson(value: any): string;
    static toRemoteSchemaDef(json: any): any;
    static remoteSchemaDefToJson(value: any): string;
    static toRemoteRelationship(json: any): any;
    static remoteRelationshipToJson(value: any): string;
    static toRemoteRelationshipDef(json: any): any;
    static remoteRelationshipDefToJson(value: any): string;
    static toRemoteField(json: any): any;
    static remoteFieldToJson(value: any): string;
    static toInputArguments(json: any): any;
    static inputArgumentsToJson(value: any): string;
    static toQueryCollectionEntry(json: any): any;
    static queryCollectionEntryToJson(value: any): string;
    static toQueryCollection(json: any): any;
    static queryCollectionToJson(value: any): string;
    static toAllowList(json: any): any;
    static allowListToJson(value: any): string;
    static toCustomTypes(json: any): any;
    static customTypesToJson(value: any): string;
    static toInputObjectType(json: any): any;
    static inputObjectTypeToJson(value: any): string;
    static toInputObjectField(json: any): any;
    static inputObjectFieldToJson(value: any): string;
    static toObjectType(json: any): any;
    static objectTypeToJson(value: any): string;
    static toObjectField(json: any): any;
    static objectFieldToJson(value: any): string;
    static toCustomTypeObjectRelationship(json: any): any;
    static customTypeObjectRelationshipToJson(value: any): string;
    static toScalarType(json: any): any;
    static scalarTypeToJson(value: any): string;
    static toEnumType(json: any): any;
    static enumTypeToJson(value: any): string;
    static toEnumValue(json: any): any;
    static enumValueToJson(value: any): string;
    static toAction(json: any): any;
    static actionToJson(value: any): string;
    static toActionDefinition(json: any): any;
    static actionDefinitionToJson(value: any): string;
    static toInputArgument(json: any): any;
    static inputArgumentToJson(value: any): string;
    static toHasuraMetadataV2(json: any): any;
    static hasuraMetadataV2ToJson(value: any): string;
}
//# sourceMappingURL=HasuraMetadataV2.d.ts.map