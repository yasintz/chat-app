{"version":3,"file":"main.js","mappings":"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","sources":["webpack://chat-app/./apps/manager/src/app/app-auth/app-auth.controller.ts","webpack://chat-app/./apps/manager/src/app/app-auth/app-auth.gql.ts","webpack://chat-app/./apps/manager/src/app/app-auth/app-auth.module.ts","webpack://chat-app/./apps/manager/src/app/app-auth/app-auth.schema.ts","webpack://chat-app/./apps/manager/src/app/app-auth/app-auth.service.ts","webpack://chat-app/./apps/manager/src/app/app.controller.ts","webpack://chat-app/./apps/manager/src/app/app.module.ts","webpack://chat-app/./apps/manager/src/app/app.service.ts","webpack://chat-app/./apps/manager/src/app/auth/auth.controller.ts","webpack://chat-app/./apps/manager/src/app/auth/auth.module.ts","webpack://chat-app/./apps/manager/src/app/auth/auth.service.ts","webpack://chat-app/./apps/manager/src/app/auth/guard/customer-auth.guard.ts","webpack://chat-app/./apps/manager/src/app/auth/guard/member-auth.guard.ts","webpack://chat-app/./apps/manager/src/app/auth/strategy/customer.strategy.ts","webpack://chat-app/./apps/manager/src/app/auth/strategy/member.strategy.ts","webpack://chat-app/./apps/manager/src/clients/graphql-request.ts","webpack://chat-app/./apps/manager/src/environments/environment.prod.ts","webpack://chat-app/./apps/manager/src/environments/jwt-token.key.ts","webpack://chat-app/./apps/manager/src/gql/fragment-masking.ts","webpack://chat-app/./apps/manager/src/gql/gql.ts","webpack://chat-app/./apps/manager/src/gql/graphql.ts","webpack://chat-app/./apps/manager/src/gql/index.ts","webpack://chat-app/external commonjs \"@nestjs/common\"","webpack://chat-app/external commonjs \"@nestjs/core\"","webpack://chat-app/external commonjs \"@nestjs/jwt\"","webpack://chat-app/external commonjs \"@nestjs/passport\"","webpack://chat-app/external commonjs \"bcrypt\"","webpack://chat-app/external commonjs \"graphql-request\"","webpack://chat-app/external commonjs \"jsonwebtoken\"","webpack://chat-app/external commonjs \"passport-local\"","webpack://chat-app/external commonjs \"tslib\"","webpack://chat-app/external commonjs \"zod\"","webpack://chat-app/webpack/bootstrap","webpack://chat-app/./apps/manager/src/main.ts"],"sourcesContent":["import { Controller } from '@nestjs/common';\n\n@Controller('app-auth')\nexport class AppAuthController {}\n","import { gql } from '../../gql';\n\nexport const getAppByIdQuery = gql(/* GraphQL */ `\n  query AppAuthServiceGetAppById($appId: uuid!, $memberId: uuid!) {\n    app: app_by_pk(id: $appId) {\n      id\n      jwtSecrets\n    }\n    member: member_by_pk(id: $memberId) {\n      id\n      appId\n    }\n  }\n`);\n","import { Module } from '@nestjs/common';\nimport { AppAuthService } from './app-auth.service';\nimport { AppAuthController } from './app-auth.controller';\n\n@Module({\n  providers: [AppAuthService],\n  controllers: [AppAuthController],\n})\nexport class AppAuthModule {}\n","import * as z from 'zod';\n\nconst claimKey = 'https://chat.app/jwt/claim';\n\nconst jwtTokenSchema = z\n  .string()\n  //eslint-disable-next-line no-useless-escape\n  .regex(/^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-+\\/=]*)/g);\n\nexport const jwtSecretTypeKeySchema = z.array(\n  z.object({\n    algorithm: z.enum(['RS256']),\n    issuer: z.string(),\n    audience: z.string().optional(),\n    key: jwtTokenSchema,\n  })\n);\n\nexport const memberTokenPayloadSchema = z\n  .object({\n    iss: z.string(),\n    [claimKey]: z\n      .object({\n        'c-user-id': z.string().uuid(),\n      })\n      .transform((claim) => ({\n        memberId: claim['c-user-id'],\n      })),\n  })\n  .transform((payload) => ({\n    claim: payload[claimKey],\n    issuer: payload.iss,\n  }));\n","import { Injectable } from '@nestjs/common';\nimport hasura from '../../clients/graphql-request';\nimport {\n  jwtSecretTypeKeySchema,\n  memberTokenPayloadSchema,\n} from './app-auth.schema';\nimport * as jwt from 'jsonwebtoken';\nimport { getAppByIdQuery } from './app-auth.gql';\n\n@Injectable()\nexport class AppAuthService {\n  safeJwtVerify(...params: Parameters<typeof jwt['verify']>) {\n    try {\n      jwt.verify(...params);\n      return { success: true };\n    } catch (error) {\n      return { success: false, error };\n    }\n  }\n  async validateMemberToken(appId: string, rawToken: string) {\n    const token = rawToken.replace('Bearer ', '');\n\n    const parsedPayload = memberTokenPayloadSchema.safeParse(jwt.decode(token));\n\n    if (!parsedPayload.success) {\n      throw new Error('Invalid token');\n    }\n\n    const payload = parsedPayload.data;\n    const data = await hasura.request(getAppByIdQuery, {\n      appId,\n      memberId: payload.claim.memberId,\n    });\n    const { app, member } = data;\n\n    if (!app) {\n      throw new Error(\"App doesn't exists\");\n    }\n\n    if (!member) {\n      throw new Error(\"Member doesn't exists\");\n    }\n\n    if (!app.jwtSecrets) {\n      throw new Error('Invalid secrets');\n    }\n\n    const parsedJwtSecrets = jwtSecretTypeKeySchema.safeParse(app.jwtSecrets);\n\n    if (!parsedJwtSecrets.success) {\n      throw new Error('Invalid secrets');\n    }\n\n    const jwtSecrets = parsedJwtSecrets.data;\n\n    const jwtSecret = jwtSecrets.find(\n      (secret) => secret.issuer === payload.issuer\n    );\n\n    if (!jwtSecret) {\n      throw new Error(\"Issuer secret doesn't exists\");\n    }\n\n    const jwtVerified = this.safeJwtVerify(token, jwtSecret.key, {\n      algorithms: [jwtSecret.algorithm],\n      issuer: jwtSecret.issuer,\n      audience: jwtSecret.algorithm,\n    });\n\n    if (!jwtVerified.success) {\n      throw new Error('Invalid JWT');\n    }\n\n    return member;\n  }\n}\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return { message: 'Hello World' };\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { AppAuthModule } from './app-auth/app-auth.module';\n\n@Module({\n  imports: [AuthModule, AppAuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n","import { Controller, Req, Post, UseGuards, Body } from '@nestjs/common';\nimport { CustomerAuthGuard } from './guard/customer-auth.guard';\nimport { AuthService } from './auth.service';\nimport { MemberAuthGuard } from './guard/member-auth.guard';\nimport type { Request } from 'express';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @UseGuards(CustomerAuthGuard)\n  @Post('customer/login')\n  async login(@Req() req: Request) {\n    return this.authService.loginCustomer(req.user as any);\n  }\n\n  @UseGuards(MemberAuthGuard)\n  @Post('member/login')\n  async memberLogin(@Req() req: Request) {\n    return this.authService.loginMember(req.user as any);\n  }\n\n  // TODO: remove after signup implementation\n  @Post('encrypt-password')\n  async encryptPassword(@Body() body: { password: string }) {\n    return this.authService.encryptPassword(body.password);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { environment } from '../../environments/environment';\nimport { AuthController } from './auth.controller';\nimport { CustomerStrategy } from './strategy/customer.strategy';\nimport { MemberStrategy } from './strategy/member.strategy';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.register({\n      privateKey: environment.jwtConstants.privateKey,\n      signOptions: {\n        expiresIn: environment.jwtConstants.expiresIn,\n        algorithm: 'RS256',\n      },\n    }),\n  ],\n  providers: [AuthService, CustomerStrategy, MemberStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport hasura from '../../clients/graphql-request';\nimport { environment } from '../../environments/environment';\nimport { gql, DocumentType } from '../../gql';\n\nenum Roles {\n  CUSTOMER = 'customer',\n  MEMBER = 'member',\n  ADMIN = 'admin',\n}\n\n// #region GQL\nconst getCustomerByEmailQuery = gql(/* GraphQL */ `\n  query AuthServiceGetCustomerByEmail($email: String!) {\n    customer(where: { email: { _eq: $email } }) {\n      id\n      encryptedPassword\n      appId\n    }\n  }\n`);\n\nconst getMemberByEmailQuery = gql(/* GraphQL */ `\n  query AuthServiceGetMemberByEmail($email: String!) {\n    member(where: { email: { _eq: $email } }) {\n      id\n      encryptedPassword\n      appId\n    }\n  }\n`);\n// #endregion\n\ntype CustomerType = DocumentType<\n  typeof getCustomerByEmailQuery\n>['customer'][number];\n\ntype MemberType = DocumentType<typeof getMemberByEmailQuery>['member'][number];\n@Injectable()\nexport class AuthService {\n  allowedRoles = Object.values(Roles);\n  defaultRole = Roles.CUSTOMER;\n\n  constructor(private jwtService: JwtService) {}\n\n  async validateCustomer(\n    username: string,\n    pass: string\n  ): Promise<CustomerType | null> {\n    const data = await hasura.request(getCustomerByEmailQuery, {\n      email: username,\n    });\n    const user = data?.customer[0];\n\n    if (!user || !user.encryptedPassword) return null;\n\n    const isPasswordMatching = await bcrypt.compare(\n      pass,\n      user.encryptedPassword\n    );\n\n    if (!isPasswordMatching) {\n      return null;\n    }\n\n    return user;\n  }\n\n  async validateMember(\n    username: string,\n    pass: string\n  ): Promise<MemberType | null> {\n    const data = await hasura.request(getMemberByEmailQuery, {\n      email: username,\n    });\n    const user = data?.member[0];\n\n    if (!user || !user.encryptedPassword) return null;\n\n    const isPasswordMatching = await bcrypt.compare(\n      pass,\n      user.encryptedPassword\n    );\n\n    if (!isPasswordMatching) {\n      return null;\n    }\n\n    return user;\n  }\n\n  async loginCustomer(user: CustomerType) {\n    const payload = {\n      sub: user.id,\n      'https://hasura.io/jwt/claims': {\n        'x-hasura-allowed-roles': this.allowedRoles,\n        'x-hasura-default-role': this.defaultRole,\n        'x-hasura-user-id': user.id,\n        'x-hasura-app-id': user.appId,\n        'x-hasura-role': Roles.CUSTOMER,\n      },\n    };\n    return {\n      token: `Bearer ${this.jwtService.sign(payload)}`,\n    };\n  }\n\n  async loginMember(user: MemberType) {\n    const payload = {\n      sub: user.id,\n      'https://hasura.io/jwt/claims': {\n        'x-hasura-allowed-roles': this.allowedRoles,\n        'x-hasura-default-role': this.defaultRole,\n        'x-hasura-user-id': user.id,\n        'x-hasura-app-id': user.appId,\n        'x-hasura-role': Roles.MEMBER,\n      },\n    };\n\n    return {\n      token: `Bearer ${this.jwtService.sign(payload)}`,\n    };\n  }\n\n  async encryptPassword(password: string) {\n    return bcrypt.hash(password, environment.bcrypt.saltRounds);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class CustomerAuthGuard extends AuthGuard('customer') {}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class MemberAuthGuard extends AuthGuard('member') {}\n","import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class CustomerStrategy extends PassportStrategy(Strategy, 'customer') {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(username: string, password: string): Promise<any> {\n    const user = await this.authService.validateCustomer(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class MemberStrategy extends PassportStrategy(Strategy, 'member') {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(username: string, password: string): Promise<any> {\n    const user = await this.authService.validateMember(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","import { GraphQLClient } from 'graphql-request';\nimport { environment } from '../environments/environment';\n\nconst hasura = new GraphQLClient(\n  environment.hasura[environment.hasuraEnv].endpoint,\n  {\n    headers: {\n      'x-hasura-admin-secret': environment.hasura[environment.hasuraEnv].secret,\n    },\n  }\n);\n\nexport default hasura;\n","import type { Environment } from './environment';\nimport { JWT_TOKEN_PRIVATE_KEY } from './jwt-token.key';\n\nexport const environment: Environment = {\n  production: true,\n  hasuraEnv: 'prod',\n  hasura: {\n    prod: {\n      endpoint: 'https://embedded-chat-app-12.hasura.app/v1/graphql',\n      secret:\n        'Oeh1m5lyFvFTMBBelE1zpFBkhfqfxjpcmeWKzXUPPRHQ9qgn2DEDpYxhyLMJfMeJ',\n    },\n    local: {\n      endpoint: 'http://localhost:8080/v1/graphql',\n      secret: 'chat',\n    },\n  },\n  jwtConstants: {\n    privateKey: JWT_TOKEN_PRIVATE_KEY,\n    expiresIn: '90 day',\n  },\n  bcrypt: {\n    saltRounds: 10,\n  },\n};\n","// apps/manager/jwt-token.key\nexport const JWT_TOKEN_PRIVATE_KEY = `-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAyyCeIzIABTM1tuO8WNRkY9Zl32CYnueiu4JQlGnKTl1WSKnU\nwN1yixAlObuCpKLFXPeiKPs0Gkf6aCUNmkfN1OGuWkksQLRaZ8Kzu4Lp7H0jioiv\nSot3unvpTERRlHAiBQWmpP9N/tcWkuB6JII5kZLiDFFi5E7/wajHey4y7Jjx5EDc\nle8qEjDUwkamOgB5KI52hyllJYvpHWL3riC7/DLT4EVcT+PqlwdNckCKf9rF0y1f\nE1Pg93LlWvZQwKVXpbfyqZ+3ITw4D8iag04cn//wdorFO5b3wnzIglplwzTmCRZJ\n7jmbBAc8swuPIgjSo/1hJjZZzEtoVICcjFQFnwIDAQABAoIBAQCFggvOcDepM05z\nxd1uuTK+mBVfK3tEvlSsT+uskJfix+BFZDKtDSATHOqKtp8YnM+B2lVgADPvri18\ntBXruJQl/qt9Nij64k+lcUh2z4X25Q0uKcalBWQNUxI1CZZhLQ5/JIayXgeinzZ8\nFUTSqDE0aElg9UE9dFsPq2JpqSTZckOSHORse/hpZwFcsc3KDP6PDPjLKn57Gfv4\nMTH6bwZVTejrtTncRAHe1WCAI5+yWFyJ+MNEtzKpOkLH6t9SmiV+VW3sY82maAMU\nryiJp/OpBs5yMJN4e43G+CTHT/uXpKmI8XocpsClrJY8E5pLeZe8Dxa+N/IQp/wg\nBKtyvp+ZAoGBAP/cOscDmlCBVvaV63l7Cg+MLe5mSy/YtjYFR/571UWdt/ReArOm\n0RbS6kkOWFNSV4I6e25KLnev4rFgIwuss8vsa9B9F1gpbjpdUkTzybR00L28meyP\nBHylS4uLdW51ratquRYylKtDrMae+0JnoS7w+4oo8h/D0SeQarPLJ0zlAoGBAMs9\nBA3xwHr9np3IBHY1sg6cB3seOkBeXsJroQgLajObpq2yIyalUXqSmAIRwrEPPPaq\nrVtj/1NSuBBCtBW4ZJSO8nlZR7QgMK9/006ewidxOKaeA5G5ijlwfdo5AdIJJq6Q\nuXsJraQ0sEfNIKWkim9oZG/4K0402T5Djg12eaQzAoGBAJCwNNj4U5q1Gb2GWEwx\nZSYXqp3HYTtkfN4drHHgC2I755wcUcDQVCtpCK5Zm187EFuHwOdEsfRjFXojGI5w\nkph+URXst3fWrgv5XB28E1OmP6kcb5sT4YCvZQI70iOuDpECYDqKTgJv2dPUcdhC\njCbkhgrCTvHhpXSPOZgFCWt1AoGBAL6pAem29nQrAydPoefnXZ/Y/ieg5tLF9S18\n3Ld4ReweRBJEwDcb9cEATvv5/2QtQGrDGRhYSgm32xbeDKUns6uuIoh2mg6/+Axb\n5TanNsrbq2KbcAvAPIzAHEChJDUPAqvW9zoWjUAzcYAaTls2bewvybFE5hNa/sYr\nh9LXZywDAoGATfWfoUYPHBnMFpkDZz1GoHSss1SPl1m4F5jCJ7cPuf7tPJRXJaMf\n/jYQi67jmzNOO6nVxPdsDxkto71qNsCkhdDkuWflawj9JQJWJyVXwgsVjZiYr634\nSXeedSKqfBGQqzXsmKd2xdgYcE9Fzp9UpGC/HeD4i+l3Js5YJgJbASM=\n-----END RSA PRIVATE KEY-----`;\n","import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\n\n\nexport type FragmentType<TDocumentType extends DocumentNode<any, any>> = TDocumentType extends DocumentNode<\n  infer TType,\n  any\n>\n  ? TType extends { ' $fragmentName'?: infer TKey }\n    ? TKey extends string\n      ? { ' $fragmentRefs'?: { [key in TKey]: TType } }\n      : never\n    : never\n  : never;\n\n// return non-nullable if `fragmentType` is non-nullable\nexport function useFragment<TType>(\n  _documentNode: DocumentNode<TType, any>,\n  fragmentType: FragmentType<DocumentNode<TType, any>>\n): TType;\n// return nullable if `fragmentType` is nullable\nexport function useFragment<TType>(\n  _documentNode: DocumentNode<TType, any>,\n  fragmentType: FragmentType<DocumentNode<TType, any>> | null | undefined\n): TType | null | undefined;\n// return array of non-nullable if `fragmentType` is array of non-nullable\nexport function useFragment<TType>(\n  _documentNode: DocumentNode<TType, any>,\n  fragmentType: ReadonlyArray<FragmentType<DocumentNode<TType, any>>>\n): ReadonlyArray<TType>;\n// return array of nullable if `fragmentType` is array of nullable\nexport function useFragment<TType>(\n  _documentNode: DocumentNode<TType, any>,\n  fragmentType: ReadonlyArray<FragmentType<DocumentNode<TType, any>>> | null | undefined\n): ReadonlyArray<TType> | null | undefined\nexport function useFragment<TType>(\n  _documentNode: DocumentNode<TType, any>,\n  fragmentType: FragmentType<DocumentNode<TType, any>> | ReadonlyArray<FragmentType<DocumentNode<TType, any>>> | null | undefined\n): TType | ReadonlyArray<TType> | null | undefined {\n  return fragmentType as any\n}\n","/* eslint-disable */\nimport * as types from './graphql';\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\n\n/**\n * Map of all GraphQL operations in the project.\n *\n * This map has several performance disadvantages:\n * 1. It is not tree-shakeable, so it will include all operations in the project.\n * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.\n * 3. It does not support dead code elimination, so it will add unused operations.\n *\n * Therefore it is highly recommended to use the babel-plugin for production.\n */\nconst documents = {\n    \"\\n  query AppAuthServiceGetAppById($appId: uuid!, $memberId: uuid!) {\\n    app: app_by_pk(id: $appId) {\\n      id\\n      jwtSecrets\\n    }\\n    member: member_by_pk(id: $memberId) {\\n      id\\n      appId\\n    }\\n  }\\n\": types.AppAuthServiceGetAppByIdDocument,\n    \"\\n  query AuthServiceGetCustomerByEmail($email: String!) {\\n    customer(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\": types.AuthServiceGetCustomerByEmailDocument,\n    \"\\n  query AuthServiceGetMemberByEmail($email: String!) {\\n    member(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\": types.AuthServiceGetMemberByEmailDocument,\n};\n\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function gql(source: \"\\n  query AppAuthServiceGetAppById($appId: uuid!, $memberId: uuid!) {\\n    app: app_by_pk(id: $appId) {\\n      id\\n      jwtSecrets\\n    }\\n    member: member_by_pk(id: $memberId) {\\n      id\\n      appId\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query AppAuthServiceGetAppById($appId: uuid!, $memberId: uuid!) {\\n    app: app_by_pk(id: $appId) {\\n      id\\n      jwtSecrets\\n    }\\n    member: member_by_pk(id: $memberId) {\\n      id\\n      appId\\n    }\\n  }\\n\"];\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function gql(source: \"\\n  query AuthServiceGetCustomerByEmail($email: String!) {\\n    customer(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query AuthServiceGetCustomerByEmail($email: String!) {\\n    customer(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\"];\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function gql(source: \"\\n  query AuthServiceGetMemberByEmail($email: String!) {\\n    member(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query AuthServiceGetMemberByEmail($email: String!) {\\n    member(where: { email: { _eq: $email } }) {\\n      id\\n      encryptedPassword\\n      appId\\n    }\\n  }\\n\"];\n\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n *\n *\n * @example\n * ```ts\n * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);\n * ```\n *\n * The query argument is unknown!\n * Please regenerate the types.\n**/\nexport function gql(source: string): unknown;\n\nexport function gql(source: string) {\n  return (documents as any)[source] ?? {};\n}\n\nexport type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;","/* eslint-disable */\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  jsonb: any;\n  timestamptz: any;\n  uuid: any;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']>;\n  _gt?: InputMaybe<Scalars['Int']>;\n  _gte?: InputMaybe<Scalars['Int']>;\n  _in?: InputMaybe<Array<Scalars['Int']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Int']>;\n  _lte?: InputMaybe<Scalars['Int']>;\n  _neq?: InputMaybe<Scalars['Int']>;\n  _nin?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']>;\n  _gt?: InputMaybe<Scalars['String']>;\n  _gte?: InputMaybe<Scalars['String']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']>;\n  _in?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']>;\n  _lt?: InputMaybe<Scalars['String']>;\n  _lte?: InputMaybe<Scalars['String']>;\n  _neq?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']>;\n  _nin?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']>;\n};\n\n/** columns and relationships of \"app\" */\nexport type App = {\n  __typename?: 'app';\n  /** An array relationship */\n  channels: Array<Channel>;\n  /** An aggregate relationship */\n  channels_aggregate: Channel_Aggregate;\n  /** An array relationship */\n  customers: Array<Customer>;\n  /** An aggregate relationship */\n  customers_aggregate: Customer_Aggregate;\n  id: Scalars['uuid'];\n  jwtSecrets?: Maybe<Scalars['jsonb']>;\n  /** An array relationship */\n  members: Array<Member>;\n  /** An aggregate relationship */\n  members_aggregate: Member_Aggregate;\n  name: Scalars['String'];\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppChannelsArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppChannels_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppCustomersArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppCustomers_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppJwtSecretsArgs = {\n  path?: InputMaybe<Scalars['String']>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppMembersArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"app\" */\nexport type AppMembers_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n/** aggregated selection of \"app\" */\nexport type App_Aggregate = {\n  __typename?: 'app_aggregate';\n  aggregate?: Maybe<App_Aggregate_Fields>;\n  nodes: Array<App>;\n};\n\n/** aggregate fields of \"app\" */\nexport type App_Aggregate_Fields = {\n  __typename?: 'app_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<App_Max_Fields>;\n  min?: Maybe<App_Min_Fields>;\n};\n\n\n/** aggregate fields of \"app\" */\nexport type App_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<App_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** append existing jsonb value of filtered columns with new jsonb value */\nexport type App_Append_Input = {\n  jwtSecrets?: InputMaybe<Scalars['jsonb']>;\n};\n\n/** Boolean expression to filter rows from the table \"app\". All fields are combined with a logical 'AND'. */\nexport type App_Bool_Exp = {\n  _and?: InputMaybe<Array<App_Bool_Exp>>;\n  _not?: InputMaybe<App_Bool_Exp>;\n  _or?: InputMaybe<Array<App_Bool_Exp>>;\n  channels?: InputMaybe<Channel_Bool_Exp>;\n  channels_aggregate?: InputMaybe<Channel_Aggregate_Bool_Exp>;\n  customers?: InputMaybe<Customer_Bool_Exp>;\n  customers_aggregate?: InputMaybe<Customer_Aggregate_Bool_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  jwtSecrets?: InputMaybe<Jsonb_Comparison_Exp>;\n  members?: InputMaybe<Member_Bool_Exp>;\n  members_aggregate?: InputMaybe<Member_Aggregate_Bool_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"app\" */\nexport enum App_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  AppPkey = 'app_pkey'\n}\n\n/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */\nexport type App_Delete_At_Path_Input = {\n  jwtSecrets?: InputMaybe<Array<Scalars['String']>>;\n};\n\n/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */\nexport type App_Delete_Elem_Input = {\n  jwtSecrets?: InputMaybe<Scalars['Int']>;\n};\n\n/** delete key/value pair or string element. key/value pairs are matched based on their key value */\nexport type App_Delete_Key_Input = {\n  jwtSecrets?: InputMaybe<Scalars['String']>;\n};\n\n/** input type for inserting data into table \"app\" */\nexport type App_Insert_Input = {\n  channels?: InputMaybe<Channel_Arr_Rel_Insert_Input>;\n  customers?: InputMaybe<Customer_Arr_Rel_Insert_Input>;\n  id?: InputMaybe<Scalars['uuid']>;\n  jwtSecrets?: InputMaybe<Scalars['jsonb']>;\n  members?: InputMaybe<Member_Arr_Rel_Insert_Input>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type App_Max_Fields = {\n  __typename?: 'app_max_fields';\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type App_Min_Fields = {\n  __typename?: 'app_min_fields';\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"app\" */\nexport type App_Mutation_Response = {\n  __typename?: 'app_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<App>;\n};\n\n/** input type for inserting object relation for remote table \"app\" */\nexport type App_Obj_Rel_Insert_Input = {\n  data: App_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<App_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"app\" */\nexport type App_On_Conflict = {\n  constraint: App_Constraint;\n  update_columns?: Array<App_Update_Column>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"app\". */\nexport type App_Order_By = {\n  channels_aggregate?: InputMaybe<Channel_Aggregate_Order_By>;\n  customers_aggregate?: InputMaybe<Customer_Aggregate_Order_By>;\n  id?: InputMaybe<Order_By>;\n  jwtSecrets?: InputMaybe<Order_By>;\n  members_aggregate?: InputMaybe<Member_Aggregate_Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: app */\nexport type App_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** prepend existing jsonb value of filtered columns with new jsonb value */\nexport type App_Prepend_Input = {\n  jwtSecrets?: InputMaybe<Scalars['jsonb']>;\n};\n\n/** select columns of table \"app\" */\nexport enum App_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  JwtSecrets = 'jwtSecrets',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"app\" */\nexport type App_Set_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  jwtSecrets?: InputMaybe<Scalars['jsonb']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** Streaming cursor of the table \"app\" */\nexport type App_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: App_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type App_Stream_Cursor_Value_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  jwtSecrets?: InputMaybe<Scalars['jsonb']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** update columns of table \"app\" */\nexport enum App_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  JwtSecrets = 'jwtSecrets',\n  /** column name */\n  Name = 'name'\n}\n\nexport type App_Updates = {\n  /** append existing jsonb value of filtered columns with new jsonb value */\n  _append?: InputMaybe<App_Append_Input>;\n  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */\n  _delete_at_path?: InputMaybe<App_Delete_At_Path_Input>;\n  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */\n  _delete_elem?: InputMaybe<App_Delete_Elem_Input>;\n  /** delete key/value pair or string element. key/value pairs are matched based on their key value */\n  _delete_key?: InputMaybe<App_Delete_Key_Input>;\n  /** prepend existing jsonb value of filtered columns with new jsonb value */\n  _prepend?: InputMaybe<App_Prepend_Input>;\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<App_Set_Input>;\n  where: App_Bool_Exp;\n};\n\n/** columns and relationships of \"channel\" */\nexport type Channel = {\n  __typename?: 'channel';\n  /** An object relationship */\n  app: App;\n  appId: Scalars['uuid'];\n  createdAt: Scalars['timestamptz'];\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id: Scalars['uuid'];\n  /** An array relationship */\n  members: Array<Member_Channel>;\n  /** An aggregate relationship */\n  members_aggregate: Member_Channel_Aggregate;\n  /** An array relationship */\n  messages: Array<Message>;\n  /** An aggregate relationship */\n  messages_aggregate: Message_Aggregate;\n  name: Scalars['String'];\n  updatedAt: Scalars['timestamptz'];\n};\n\n\n/** columns and relationships of \"channel\" */\nexport type ChannelMembersArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"channel\" */\nexport type ChannelMembers_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"channel\" */\nexport type ChannelMessagesArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"channel\" */\nexport type ChannelMessages_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n/** aggregated selection of \"channel\" */\nexport type Channel_Aggregate = {\n  __typename?: 'channel_aggregate';\n  aggregate?: Maybe<Channel_Aggregate_Fields>;\n  nodes: Array<Channel>;\n};\n\nexport type Channel_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Channel_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Channel_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Channel_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Channel_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"channel\" */\nexport type Channel_Aggregate_Fields = {\n  __typename?: 'channel_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Channel_Max_Fields>;\n  min?: Maybe<Channel_Min_Fields>;\n};\n\n\n/** aggregate fields of \"channel\" */\nexport type Channel_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Channel_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"channel\" */\nexport type Channel_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Channel_Max_Order_By>;\n  min?: InputMaybe<Channel_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"channel\" */\nexport type Channel_Arr_Rel_Insert_Input = {\n  data: Array<Channel_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Channel_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"channel\". All fields are combined with a logical 'AND'. */\nexport type Channel_Bool_Exp = {\n  _and?: InputMaybe<Array<Channel_Bool_Exp>>;\n  _not?: InputMaybe<Channel_Bool_Exp>;\n  _or?: InputMaybe<Array<Channel_Bool_Exp>>;\n  app?: InputMaybe<App_Bool_Exp>;\n  appId?: InputMaybe<Uuid_Comparison_Exp>;\n  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  deletedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  members?: InputMaybe<Member_Channel_Bool_Exp>;\n  members_aggregate?: InputMaybe<Member_Channel_Aggregate_Bool_Exp>;\n  messages?: InputMaybe<Message_Bool_Exp>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"channel\" */\nexport enum Channel_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  ChannelPkey = 'channel_pkey'\n}\n\n/** input type for inserting data into table \"channel\" */\nexport type Channel_Insert_Input = {\n  app?: InputMaybe<App_Obj_Rel_Insert_Input>;\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  members?: InputMaybe<Member_Channel_Arr_Rel_Insert_Input>;\n  messages?: InputMaybe<Message_Arr_Rel_Insert_Input>;\n  name?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** aggregate max on columns */\nexport type Channel_Max_Fields = {\n  __typename?: 'channel_max_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by max() on columns of table \"channel\" */\nexport type Channel_Max_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Channel_Min_Fields = {\n  __typename?: 'channel_min_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by min() on columns of table \"channel\" */\nexport type Channel_Min_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"channel\" */\nexport type Channel_Mutation_Response = {\n  __typename?: 'channel_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Channel>;\n};\n\n/** input type for inserting object relation for remote table \"channel\" */\nexport type Channel_Obj_Rel_Insert_Input = {\n  data: Channel_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Channel_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"channel\" */\nexport type Channel_On_Conflict = {\n  constraint: Channel_Constraint;\n  update_columns?: Array<Channel_Update_Column>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"channel\". */\nexport type Channel_Order_By = {\n  app?: InputMaybe<App_Order_By>;\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  members_aggregate?: InputMaybe<Member_Channel_Aggregate_Order_By>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  name?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: channel */\nexport type Channel_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** select columns of table \"channel\" */\nexport enum Channel_Select_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\n/** input type for updating data in table \"channel\" */\nexport type Channel_Set_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** Streaming cursor of the table \"channel\" */\nexport type Channel_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Channel_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Channel_Stream_Cursor_Value_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** update columns of table \"channel\" */\nexport enum Channel_Update_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\nexport type Channel_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Channel_Set_Input>;\n  where: Channel_Bool_Exp;\n};\n\n/** ordering argument of a cursor */\nexport enum Cursor_Ordering {\n  /** ascending ordering of the cursor */\n  Asc = 'ASC',\n  /** descending ordering of the cursor */\n  Desc = 'DESC'\n}\n\n/** columns and relationships of \"customer\" */\nexport type Customer = {\n  __typename?: 'customer';\n  /** An object relationship */\n  app: App;\n  appId: Scalars['uuid'];\n  createdAt: Scalars['timestamptz'];\n  email: Scalars['String'];\n  encryptedPassword?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  id: Scalars['uuid'];\n  lastName: Scalars['String'];\n  role: Customer_Role_Enum;\n  updatedAt: Scalars['timestamptz'];\n};\n\n/** aggregated selection of \"customer\" */\nexport type Customer_Aggregate = {\n  __typename?: 'customer_aggregate';\n  aggregate?: Maybe<Customer_Aggregate_Fields>;\n  nodes: Array<Customer>;\n};\n\nexport type Customer_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Customer_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Customer_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Customer_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Customer_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"customer\" */\nexport type Customer_Aggregate_Fields = {\n  __typename?: 'customer_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Customer_Max_Fields>;\n  min?: Maybe<Customer_Min_Fields>;\n};\n\n\n/** aggregate fields of \"customer\" */\nexport type Customer_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Customer_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"customer\" */\nexport type Customer_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Customer_Max_Order_By>;\n  min?: InputMaybe<Customer_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"customer\" */\nexport type Customer_Arr_Rel_Insert_Input = {\n  data: Array<Customer_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Customer_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"customer\". All fields are combined with a logical 'AND'. */\nexport type Customer_Bool_Exp = {\n  _and?: InputMaybe<Array<Customer_Bool_Exp>>;\n  _not?: InputMaybe<Customer_Bool_Exp>;\n  _or?: InputMaybe<Array<Customer_Bool_Exp>>;\n  app?: InputMaybe<App_Bool_Exp>;\n  appId?: InputMaybe<Uuid_Comparison_Exp>;\n  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  email?: InputMaybe<String_Comparison_Exp>;\n  encryptedPassword?: InputMaybe<String_Comparison_Exp>;\n  firstName?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  lastName?: InputMaybe<String_Comparison_Exp>;\n  role?: InputMaybe<Customer_Role_Enum_Comparison_Exp>;\n  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"customer\" */\nexport enum Customer_Constraint {\n  /** unique or primary key constraint on columns \"email\" */\n  CustomerEmailKey = 'customer_email_key',\n  /** unique or primary key constraint on columns \"id\" */\n  CustomerPkey = 'customer_pkey'\n}\n\n/** input type for inserting data into table \"customer\" */\nexport type Customer_Insert_Input = {\n  app?: InputMaybe<App_Obj_Rel_Insert_Input>;\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<Customer_Role_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** aggregate max on columns */\nexport type Customer_Max_Fields = {\n  __typename?: 'customer_max_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  email?: Maybe<Scalars['String']>;\n  encryptedPassword?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['uuid']>;\n  lastName?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by max() on columns of table \"customer\" */\nexport type Customer_Max_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Customer_Min_Fields = {\n  __typename?: 'customer_min_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  email?: Maybe<Scalars['String']>;\n  encryptedPassword?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['uuid']>;\n  lastName?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by min() on columns of table \"customer\" */\nexport type Customer_Min_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"customer\" */\nexport type Customer_Mutation_Response = {\n  __typename?: 'customer_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Customer>;\n};\n\n/** on_conflict condition type for table \"customer\" */\nexport type Customer_On_Conflict = {\n  constraint: Customer_Constraint;\n  update_columns?: Array<Customer_Update_Column>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"customer\". */\nexport type Customer_Order_By = {\n  app?: InputMaybe<App_Order_By>;\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  role?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: customer */\nexport type Customer_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** columns and relationships of \"customer_role\" */\nexport type Customer_Role = {\n  __typename?: 'customer_role';\n  value: Scalars['String'];\n};\n\n/** aggregated selection of \"customer_role\" */\nexport type Customer_Role_Aggregate = {\n  __typename?: 'customer_role_aggregate';\n  aggregate?: Maybe<Customer_Role_Aggregate_Fields>;\n  nodes: Array<Customer_Role>;\n};\n\n/** aggregate fields of \"customer_role\" */\nexport type Customer_Role_Aggregate_Fields = {\n  __typename?: 'customer_role_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Customer_Role_Max_Fields>;\n  min?: Maybe<Customer_Role_Min_Fields>;\n};\n\n\n/** aggregate fields of \"customer_role\" */\nexport type Customer_Role_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Customer_Role_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Boolean expression to filter rows from the table \"customer_role\". All fields are combined with a logical 'AND'. */\nexport type Customer_Role_Bool_Exp = {\n  _and?: InputMaybe<Array<Customer_Role_Bool_Exp>>;\n  _not?: InputMaybe<Customer_Role_Bool_Exp>;\n  _or?: InputMaybe<Array<Customer_Role_Bool_Exp>>;\n  value?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"customer_role\" */\nexport enum Customer_Role_Constraint {\n  /** unique or primary key constraint on columns \"value\" */\n  CustomerRolePkey = 'customer_role_pkey'\n}\n\nexport enum Customer_Role_Enum {\n  Admin = 'admin',\n  Owner = 'owner'\n}\n\n/** Boolean expression to compare columns of type \"customer_role_enum\". All fields are combined with logical 'AND'. */\nexport type Customer_Role_Enum_Comparison_Exp = {\n  _eq?: InputMaybe<Customer_Role_Enum>;\n  _in?: InputMaybe<Array<Customer_Role_Enum>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _neq?: InputMaybe<Customer_Role_Enum>;\n  _nin?: InputMaybe<Array<Customer_Role_Enum>>;\n};\n\n/** input type for inserting data into table \"customer_role\" */\nexport type Customer_Role_Insert_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Customer_Role_Max_Fields = {\n  __typename?: 'customer_role_max_fields';\n  value?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Customer_Role_Min_Fields = {\n  __typename?: 'customer_role_min_fields';\n  value?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"customer_role\" */\nexport type Customer_Role_Mutation_Response = {\n  __typename?: 'customer_role_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Customer_Role>;\n};\n\n/** on_conflict condition type for table \"customer_role\" */\nexport type Customer_Role_On_Conflict = {\n  constraint: Customer_Role_Constraint;\n  update_columns?: Array<Customer_Role_Update_Column>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"customer_role\". */\nexport type Customer_Role_Order_By = {\n  value?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: customer_role */\nexport type Customer_Role_Pk_Columns_Input = {\n  value: Scalars['String'];\n};\n\n/** select columns of table \"customer_role\" */\nexport enum Customer_Role_Select_Column {\n  /** column name */\n  Value = 'value'\n}\n\n/** input type for updating data in table \"customer_role\" */\nexport type Customer_Role_Set_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** Streaming cursor of the table \"customer_role\" */\nexport type Customer_Role_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Customer_Role_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Customer_Role_Stream_Cursor_Value_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** update columns of table \"customer_role\" */\nexport enum Customer_Role_Update_Column {\n  /** column name */\n  Value = 'value'\n}\n\nexport type Customer_Role_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Customer_Role_Set_Input>;\n  where: Customer_Role_Bool_Exp;\n};\n\n/** select columns of table \"customer\" */\nexport enum Customer_Select_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  Email = 'email',\n  /** column name */\n  EncryptedPassword = 'encryptedPassword',\n  /** column name */\n  FirstName = 'firstName',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  LastName = 'lastName',\n  /** column name */\n  Role = 'role',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\n/** input type for updating data in table \"customer\" */\nexport type Customer_Set_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<Customer_Role_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** Streaming cursor of the table \"customer\" */\nexport type Customer_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Customer_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Customer_Stream_Cursor_Value_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<Customer_Role_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** update columns of table \"customer\" */\nexport enum Customer_Update_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  Email = 'email',\n  /** column name */\n  EncryptedPassword = 'encryptedPassword',\n  /** column name */\n  FirstName = 'firstName',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  LastName = 'lastName',\n  /** column name */\n  Role = 'role',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\nexport type Customer_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Customer_Set_Input>;\n  where: Customer_Bool_Exp;\n};\n\n/** columns and relationships of \"file\" */\nexport type File = {\n  __typename?: 'file';\n  createdAt: Scalars['timestamptz'];\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  /** An object relationship */\n  file_service: File_Service;\n  id: Scalars['uuid'];\n  /** An array relationship */\n  member_files: Array<Member_File>;\n  /** An aggregate relationship */\n  member_files_aggregate: Member_File_Aggregate;\n  /** An array relationship */\n  message_files: Array<Message_File>;\n  /** An aggregate relationship */\n  message_files_aggregate: Message_File_Aggregate;\n  name: Scalars['String'];\n  path: Scalars['String'];\n  service: File_Service_Enum;\n  updatedAt: Scalars['timestamptz'];\n};\n\n\n/** columns and relationships of \"file\" */\nexport type FileMember_FilesArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"file\" */\nexport type FileMember_Files_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"file\" */\nexport type FileMessage_FilesArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"file\" */\nexport type FileMessage_Files_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n/** aggregated selection of \"file\" */\nexport type File_Aggregate = {\n  __typename?: 'file_aggregate';\n  aggregate?: Maybe<File_Aggregate_Fields>;\n  nodes: Array<File>;\n};\n\n/** aggregate fields of \"file\" */\nexport type File_Aggregate_Fields = {\n  __typename?: 'file_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<File_Max_Fields>;\n  min?: Maybe<File_Min_Fields>;\n};\n\n\n/** aggregate fields of \"file\" */\nexport type File_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<File_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Boolean expression to filter rows from the table \"file\". All fields are combined with a logical 'AND'. */\nexport type File_Bool_Exp = {\n  _and?: InputMaybe<Array<File_Bool_Exp>>;\n  _not?: InputMaybe<File_Bool_Exp>;\n  _or?: InputMaybe<Array<File_Bool_Exp>>;\n  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  deletedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  file_service?: InputMaybe<File_Service_Bool_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  member_files?: InputMaybe<Member_File_Bool_Exp>;\n  member_files_aggregate?: InputMaybe<Member_File_Aggregate_Bool_Exp>;\n  message_files?: InputMaybe<Message_File_Bool_Exp>;\n  message_files_aggregate?: InputMaybe<Message_File_Aggregate_Bool_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n  path?: InputMaybe<String_Comparison_Exp>;\n  service?: InputMaybe<File_Service_Enum_Comparison_Exp>;\n  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"file\" */\nexport enum File_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  FilePkey = 'file_pkey'\n}\n\n/** input type for inserting data into table \"file\" */\nexport type File_Insert_Input = {\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  file_service?: InputMaybe<File_Service_Obj_Rel_Insert_Input>;\n  id?: InputMaybe<Scalars['uuid']>;\n  member_files?: InputMaybe<Member_File_Arr_Rel_Insert_Input>;\n  message_files?: InputMaybe<Message_File_Arr_Rel_Insert_Input>;\n  name?: InputMaybe<Scalars['String']>;\n  path?: InputMaybe<Scalars['String']>;\n  service?: InputMaybe<File_Service_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** aggregate max on columns */\nexport type File_Max_Fields = {\n  __typename?: 'file_max_fields';\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  path?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** aggregate min on columns */\nexport type File_Min_Fields = {\n  __typename?: 'file_min_fields';\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n  path?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** response of any mutation on the table \"file\" */\nexport type File_Mutation_Response = {\n  __typename?: 'file_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<File>;\n};\n\n/** input type for inserting object relation for remote table \"file\" */\nexport type File_Obj_Rel_Insert_Input = {\n  data: File_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<File_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"file\" */\nexport type File_On_Conflict = {\n  constraint: File_Constraint;\n  update_columns?: Array<File_Update_Column>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"file\". */\nexport type File_Order_By = {\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  file_service?: InputMaybe<File_Service_Order_By>;\n  id?: InputMaybe<Order_By>;\n  member_files_aggregate?: InputMaybe<Member_File_Aggregate_Order_By>;\n  message_files_aggregate?: InputMaybe<Message_File_Aggregate_Order_By>;\n  name?: InputMaybe<Order_By>;\n  path?: InputMaybe<Order_By>;\n  service?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: file */\nexport type File_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** select columns of table \"file\" */\nexport enum File_Select_Column {\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  Path = 'path',\n  /** column name */\n  Service = 'service',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\n/** columns and relationships of \"file_service\" */\nexport type File_Service = {\n  __typename?: 'file_service';\n  value: Scalars['String'];\n};\n\n/** aggregated selection of \"file_service\" */\nexport type File_Service_Aggregate = {\n  __typename?: 'file_service_aggregate';\n  aggregate?: Maybe<File_Service_Aggregate_Fields>;\n  nodes: Array<File_Service>;\n};\n\n/** aggregate fields of \"file_service\" */\nexport type File_Service_Aggregate_Fields = {\n  __typename?: 'file_service_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<File_Service_Max_Fields>;\n  min?: Maybe<File_Service_Min_Fields>;\n};\n\n\n/** aggregate fields of \"file_service\" */\nexport type File_Service_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<File_Service_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Boolean expression to filter rows from the table \"file_service\". All fields are combined with a logical 'AND'. */\nexport type File_Service_Bool_Exp = {\n  _and?: InputMaybe<Array<File_Service_Bool_Exp>>;\n  _not?: InputMaybe<File_Service_Bool_Exp>;\n  _or?: InputMaybe<Array<File_Service_Bool_Exp>>;\n  value?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"file_service\" */\nexport enum File_Service_Constraint {\n  /** unique or primary key constraint on columns \"value\" */\n  FileServicePkey = 'file_service_pkey'\n}\n\nexport enum File_Service_Enum {\n  Cloudinary = 'cloudinary'\n}\n\n/** Boolean expression to compare columns of type \"file_service_enum\". All fields are combined with logical 'AND'. */\nexport type File_Service_Enum_Comparison_Exp = {\n  _eq?: InputMaybe<File_Service_Enum>;\n  _in?: InputMaybe<Array<File_Service_Enum>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _neq?: InputMaybe<File_Service_Enum>;\n  _nin?: InputMaybe<Array<File_Service_Enum>>;\n};\n\n/** input type for inserting data into table \"file_service\" */\nexport type File_Service_Insert_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type File_Service_Max_Fields = {\n  __typename?: 'file_service_max_fields';\n  value?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type File_Service_Min_Fields = {\n  __typename?: 'file_service_min_fields';\n  value?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"file_service\" */\nexport type File_Service_Mutation_Response = {\n  __typename?: 'file_service_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<File_Service>;\n};\n\n/** input type for inserting object relation for remote table \"file_service\" */\nexport type File_Service_Obj_Rel_Insert_Input = {\n  data: File_Service_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<File_Service_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"file_service\" */\nexport type File_Service_On_Conflict = {\n  constraint: File_Service_Constraint;\n  update_columns?: Array<File_Service_Update_Column>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"file_service\". */\nexport type File_Service_Order_By = {\n  value?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: file_service */\nexport type File_Service_Pk_Columns_Input = {\n  value: Scalars['String'];\n};\n\n/** select columns of table \"file_service\" */\nexport enum File_Service_Select_Column {\n  /** column name */\n  Value = 'value'\n}\n\n/** input type for updating data in table \"file_service\" */\nexport type File_Service_Set_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** Streaming cursor of the table \"file_service\" */\nexport type File_Service_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: File_Service_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type File_Service_Stream_Cursor_Value_Input = {\n  value?: InputMaybe<Scalars['String']>;\n};\n\n/** update columns of table \"file_service\" */\nexport enum File_Service_Update_Column {\n  /** column name */\n  Value = 'value'\n}\n\nexport type File_Service_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<File_Service_Set_Input>;\n  where: File_Service_Bool_Exp;\n};\n\n/** input type for updating data in table \"file\" */\nexport type File_Set_Input = {\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n  path?: InputMaybe<Scalars['String']>;\n  service?: InputMaybe<File_Service_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** Streaming cursor of the table \"file\" */\nexport type File_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: File_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type File_Stream_Cursor_Value_Input = {\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n  path?: InputMaybe<Scalars['String']>;\n  service?: InputMaybe<File_Service_Enum>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** update columns of table \"file\" */\nexport enum File_Update_Column {\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name',\n  /** column name */\n  Path = 'path',\n  /** column name */\n  Service = 'service',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\nexport type File_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<File_Set_Input>;\n  where: File_Bool_Exp;\n};\n\nexport type Jsonb_Cast_Exp = {\n  String?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** Boolean expression to compare columns of type \"jsonb\". All fields are combined with logical 'AND'. */\nexport type Jsonb_Comparison_Exp = {\n  _cast?: InputMaybe<Jsonb_Cast_Exp>;\n  /** is the column contained in the given json value */\n  _contained_in?: InputMaybe<Scalars['jsonb']>;\n  /** does the column contain the given json value at the top level */\n  _contains?: InputMaybe<Scalars['jsonb']>;\n  _eq?: InputMaybe<Scalars['jsonb']>;\n  _gt?: InputMaybe<Scalars['jsonb']>;\n  _gte?: InputMaybe<Scalars['jsonb']>;\n  /** does the string exist as a top-level key in the column */\n  _has_key?: InputMaybe<Scalars['String']>;\n  /** do all of these strings exist as top-level keys in the column */\n  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;\n  /** do any of these strings exist as top-level keys in the column */\n  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;\n  _in?: InputMaybe<Array<Scalars['jsonb']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['jsonb']>;\n  _lte?: InputMaybe<Scalars['jsonb']>;\n  _neq?: InputMaybe<Scalars['jsonb']>;\n  _nin?: InputMaybe<Array<Scalars['jsonb']>>;\n};\n\n/** columns and relationships of \"member\" */\nexport type Member = {\n  __typename?: 'member';\n  /** An object relationship */\n  app: App;\n  appId: Scalars['uuid'];\n  /** An array relationship */\n  channels: Array<Member_Channel>;\n  /** An aggregate relationship */\n  channels_aggregate: Member_Channel_Aggregate;\n  createdAt: Scalars['timestamptz'];\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  email?: Maybe<Scalars['String']>;\n  encryptedPassword?: Maybe<Scalars['String']>;\n  /** An array relationship */\n  files: Array<Member_File>;\n  /** An aggregate relationship */\n  files_aggregate: Member_File_Aggregate;\n  firstName: Scalars['String'];\n  id: Scalars['uuid'];\n  lastName: Scalars['String'];\n  /** An array relationship */\n  messages: Array<Message>;\n  /** An aggregate relationship */\n  messages_aggregate: Message_Aggregate;\n  updatedAt: Scalars['timestamptz'];\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberChannelsArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberChannels_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberFilesArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberFiles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberMessagesArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"member\" */\nexport type MemberMessages_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n/** aggregated selection of \"member\" */\nexport type Member_Aggregate = {\n  __typename?: 'member_aggregate';\n  aggregate?: Maybe<Member_Aggregate_Fields>;\n  nodes: Array<Member>;\n};\n\nexport type Member_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Member_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Member_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Member_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Member_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"member\" */\nexport type Member_Aggregate_Fields = {\n  __typename?: 'member_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Member_Max_Fields>;\n  min?: Maybe<Member_Min_Fields>;\n};\n\n\n/** aggregate fields of \"member\" */\nexport type Member_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Member_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"member\" */\nexport type Member_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Member_Max_Order_By>;\n  min?: InputMaybe<Member_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"member\" */\nexport type Member_Arr_Rel_Insert_Input = {\n  data: Array<Member_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Member_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"member\". All fields are combined with a logical 'AND'. */\nexport type Member_Bool_Exp = {\n  _and?: InputMaybe<Array<Member_Bool_Exp>>;\n  _not?: InputMaybe<Member_Bool_Exp>;\n  _or?: InputMaybe<Array<Member_Bool_Exp>>;\n  app?: InputMaybe<App_Bool_Exp>;\n  appId?: InputMaybe<Uuid_Comparison_Exp>;\n  channels?: InputMaybe<Member_Channel_Bool_Exp>;\n  channels_aggregate?: InputMaybe<Member_Channel_Aggregate_Bool_Exp>;\n  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  deletedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  email?: InputMaybe<String_Comparison_Exp>;\n  encryptedPassword?: InputMaybe<String_Comparison_Exp>;\n  files?: InputMaybe<Member_File_Bool_Exp>;\n  files_aggregate?: InputMaybe<Member_File_Aggregate_Bool_Exp>;\n  firstName?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  lastName?: InputMaybe<String_Comparison_Exp>;\n  messages?: InputMaybe<Message_Bool_Exp>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n};\n\n/** columns and relationships of \"member_channel\" */\nexport type Member_Channel = {\n  __typename?: 'member_channel';\n  /** An object relationship */\n  channel: Channel;\n  channelId: Scalars['uuid'];\n  id: Scalars['uuid'];\n  /** An object relationship */\n  member: Member;\n  memberId: Scalars['uuid'];\n};\n\n/** aggregated selection of \"member_channel\" */\nexport type Member_Channel_Aggregate = {\n  __typename?: 'member_channel_aggregate';\n  aggregate?: Maybe<Member_Channel_Aggregate_Fields>;\n  nodes: Array<Member_Channel>;\n};\n\nexport type Member_Channel_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Member_Channel_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Member_Channel_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Member_Channel_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"member_channel\" */\nexport type Member_Channel_Aggregate_Fields = {\n  __typename?: 'member_channel_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Member_Channel_Max_Fields>;\n  min?: Maybe<Member_Channel_Min_Fields>;\n};\n\n\n/** aggregate fields of \"member_channel\" */\nexport type Member_Channel_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"member_channel\" */\nexport type Member_Channel_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Member_Channel_Max_Order_By>;\n  min?: InputMaybe<Member_Channel_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"member_channel\" */\nexport type Member_Channel_Arr_Rel_Insert_Input = {\n  data: Array<Member_Channel_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Member_Channel_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"member_channel\". All fields are combined with a logical 'AND'. */\nexport type Member_Channel_Bool_Exp = {\n  _and?: InputMaybe<Array<Member_Channel_Bool_Exp>>;\n  _not?: InputMaybe<Member_Channel_Bool_Exp>;\n  _or?: InputMaybe<Array<Member_Channel_Bool_Exp>>;\n  channel?: InputMaybe<Channel_Bool_Exp>;\n  channelId?: InputMaybe<Uuid_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  member?: InputMaybe<Member_Bool_Exp>;\n  memberId?: InputMaybe<Uuid_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"member_channel\" */\nexport enum Member_Channel_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  MemberChannelIdKey = 'member_channel_id_key',\n  /** unique or primary key constraint on columns \"member_id\", \"channel_id\" */\n  MemberChannelPkey = 'member_channel_pkey'\n}\n\n/** input type for inserting data into table \"member_channel\" */\nexport type Member_Channel_Insert_Input = {\n  channel?: InputMaybe<Channel_Obj_Rel_Insert_Input>;\n  channelId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  member?: InputMaybe<Member_Obj_Rel_Insert_Input>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** aggregate max on columns */\nexport type Member_Channel_Max_Fields = {\n  __typename?: 'member_channel_max_fields';\n  channelId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  memberId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by max() on columns of table \"member_channel\" */\nexport type Member_Channel_Max_Order_By = {\n  channelId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Member_Channel_Min_Fields = {\n  __typename?: 'member_channel_min_fields';\n  channelId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  memberId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by min() on columns of table \"member_channel\" */\nexport type Member_Channel_Min_Order_By = {\n  channelId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"member_channel\" */\nexport type Member_Channel_Mutation_Response = {\n  __typename?: 'member_channel_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Member_Channel>;\n};\n\n/** on_conflict condition type for table \"member_channel\" */\nexport type Member_Channel_On_Conflict = {\n  constraint: Member_Channel_Constraint;\n  update_columns?: Array<Member_Channel_Update_Column>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"member_channel\". */\nexport type Member_Channel_Order_By = {\n  channel?: InputMaybe<Channel_Order_By>;\n  channelId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  member?: InputMaybe<Member_Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: member_channel */\nexport type Member_Channel_Pk_Columns_Input = {\n  channelId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n/** select columns of table \"member_channel\" */\nexport enum Member_Channel_Select_Column {\n  /** column name */\n  ChannelId = 'channelId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MemberId = 'memberId'\n}\n\n/** input type for updating data in table \"member_channel\" */\nexport type Member_Channel_Set_Input = {\n  channelId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** Streaming cursor of the table \"member_channel\" */\nexport type Member_Channel_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Member_Channel_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Member_Channel_Stream_Cursor_Value_Input = {\n  channelId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** update columns of table \"member_channel\" */\nexport enum Member_Channel_Update_Column {\n  /** column name */\n  ChannelId = 'channelId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MemberId = 'memberId'\n}\n\nexport type Member_Channel_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Member_Channel_Set_Input>;\n  where: Member_Channel_Bool_Exp;\n};\n\n/** unique or primary key constraints on table \"member\" */\nexport enum Member_Constraint {\n  /** unique or primary key constraint on columns \"email\", \"app_id\" */\n  MemberEmailAppIdKey = 'member_email_app_id_key',\n  /** unique or primary key constraint on columns \"id\" */\n  MemberPkey = 'member_pkey'\n}\n\n/** columns and relationships of \"member_file\" */\nexport type Member_File = {\n  __typename?: 'member_file';\n  /** An object relationship */\n  file: File;\n  fileId: Scalars['uuid'];\n  id: Scalars['uuid'];\n  /** An object relationship */\n  member: Member;\n  memberId: Scalars['uuid'];\n};\n\n/** aggregated selection of \"member_file\" */\nexport type Member_File_Aggregate = {\n  __typename?: 'member_file_aggregate';\n  aggregate?: Maybe<Member_File_Aggregate_Fields>;\n  nodes: Array<Member_File>;\n};\n\nexport type Member_File_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Member_File_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Member_File_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Member_File_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Member_File_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"member_file\" */\nexport type Member_File_Aggregate_Fields = {\n  __typename?: 'member_file_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Member_File_Max_Fields>;\n  min?: Maybe<Member_File_Min_Fields>;\n};\n\n\n/** aggregate fields of \"member_file\" */\nexport type Member_File_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Member_File_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"member_file\" */\nexport type Member_File_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Member_File_Max_Order_By>;\n  min?: InputMaybe<Member_File_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"member_file\" */\nexport type Member_File_Arr_Rel_Insert_Input = {\n  data: Array<Member_File_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Member_File_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"member_file\". All fields are combined with a logical 'AND'. */\nexport type Member_File_Bool_Exp = {\n  _and?: InputMaybe<Array<Member_File_Bool_Exp>>;\n  _not?: InputMaybe<Member_File_Bool_Exp>;\n  _or?: InputMaybe<Array<Member_File_Bool_Exp>>;\n  file?: InputMaybe<File_Bool_Exp>;\n  fileId?: InputMaybe<Uuid_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  member?: InputMaybe<Member_Bool_Exp>;\n  memberId?: InputMaybe<Uuid_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"member_file\" */\nexport enum Member_File_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  MemberFileIdKey = 'member_file_id_key',\n  /** unique or primary key constraint on columns \"member_id\", \"file_id\" */\n  MemberFilePkey = 'member_file_pkey'\n}\n\n/** input type for inserting data into table \"member_file\" */\nexport type Member_File_Insert_Input = {\n  file?: InputMaybe<File_Obj_Rel_Insert_Input>;\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  member?: InputMaybe<Member_Obj_Rel_Insert_Input>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** aggregate max on columns */\nexport type Member_File_Max_Fields = {\n  __typename?: 'member_file_max_fields';\n  fileId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  memberId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by max() on columns of table \"member_file\" */\nexport type Member_File_Max_Order_By = {\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Member_File_Min_Fields = {\n  __typename?: 'member_file_min_fields';\n  fileId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  memberId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by min() on columns of table \"member_file\" */\nexport type Member_File_Min_Order_By = {\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"member_file\" */\nexport type Member_File_Mutation_Response = {\n  __typename?: 'member_file_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Member_File>;\n};\n\n/** on_conflict condition type for table \"member_file\" */\nexport type Member_File_On_Conflict = {\n  constraint: Member_File_Constraint;\n  update_columns?: Array<Member_File_Update_Column>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"member_file\". */\nexport type Member_File_Order_By = {\n  file?: InputMaybe<File_Order_By>;\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  member?: InputMaybe<Member_Order_By>;\n  memberId?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: member_file */\nexport type Member_File_Pk_Columns_Input = {\n  fileId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n/** select columns of table \"member_file\" */\nexport enum Member_File_Select_Column {\n  /** column name */\n  FileId = 'fileId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MemberId = 'memberId'\n}\n\n/** input type for updating data in table \"member_file\" */\nexport type Member_File_Set_Input = {\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** Streaming cursor of the table \"member_file\" */\nexport type Member_File_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Member_File_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Member_File_Stream_Cursor_Value_Input = {\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  memberId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** update columns of table \"member_file\" */\nexport enum Member_File_Update_Column {\n  /** column name */\n  FileId = 'fileId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MemberId = 'memberId'\n}\n\nexport type Member_File_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Member_File_Set_Input>;\n  where: Member_File_Bool_Exp;\n};\n\n/** input type for inserting data into table \"member\" */\nexport type Member_Insert_Input = {\n  app?: InputMaybe<App_Obj_Rel_Insert_Input>;\n  appId?: InputMaybe<Scalars['uuid']>;\n  channels?: InputMaybe<Member_Channel_Arr_Rel_Insert_Input>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  files?: InputMaybe<Member_File_Arr_Rel_Insert_Input>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  messages?: InputMaybe<Message_Arr_Rel_Insert_Input>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** aggregate max on columns */\nexport type Member_Max_Fields = {\n  __typename?: 'member_max_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  email?: Maybe<Scalars['String']>;\n  encryptedPassword?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['uuid']>;\n  lastName?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by max() on columns of table \"member\" */\nexport type Member_Max_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Member_Min_Fields = {\n  __typename?: 'member_min_fields';\n  appId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  email?: Maybe<Scalars['String']>;\n  encryptedPassword?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['uuid']>;\n  lastName?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by min() on columns of table \"member\" */\nexport type Member_Min_Order_By = {\n  appId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"member\" */\nexport type Member_Mutation_Response = {\n  __typename?: 'member_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Member>;\n};\n\n/** input type for inserting object relation for remote table \"member\" */\nexport type Member_Obj_Rel_Insert_Input = {\n  data: Member_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Member_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"member\" */\nexport type Member_On_Conflict = {\n  constraint: Member_Constraint;\n  update_columns?: Array<Member_Update_Column>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"member\". */\nexport type Member_Order_By = {\n  app?: InputMaybe<App_Order_By>;\n  appId?: InputMaybe<Order_By>;\n  channels_aggregate?: InputMaybe<Member_Channel_Aggregate_Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  email?: InputMaybe<Order_By>;\n  encryptedPassword?: InputMaybe<Order_By>;\n  files_aggregate?: InputMaybe<Member_File_Aggregate_Order_By>;\n  firstName?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  lastName?: InputMaybe<Order_By>;\n  messages_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: member */\nexport type Member_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** select columns of table \"member\" */\nexport enum Member_Select_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Email = 'email',\n  /** column name */\n  EncryptedPassword = 'encryptedPassword',\n  /** column name */\n  FirstName = 'firstName',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  LastName = 'lastName',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\n/** input type for updating data in table \"member\" */\nexport type Member_Set_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** Streaming cursor of the table \"member\" */\nexport type Member_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Member_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Member_Stream_Cursor_Value_Input = {\n  appId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  email?: InputMaybe<Scalars['String']>;\n  encryptedPassword?: InputMaybe<Scalars['String']>;\n  firstName?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  lastName?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** update columns of table \"member\" */\nexport enum Member_Update_Column {\n  /** column name */\n  AppId = 'appId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Email = 'email',\n  /** column name */\n  EncryptedPassword = 'encryptedPassword',\n  /** column name */\n  FirstName = 'firstName',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  LastName = 'lastName',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\nexport type Member_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Member_Set_Input>;\n  where: Member_Bool_Exp;\n};\n\n/** columns and relationships of \"message\" */\nexport type Message = {\n  __typename?: 'message';\n  body: Scalars['String'];\n  /** An object relationship */\n  channel: Channel;\n  channelId: Scalars['uuid'];\n  /** An array relationship */\n  children: Array<Message>;\n  /** An aggregate relationship */\n  children_aggregate: Message_Aggregate;\n  createdAt: Scalars['timestamptz'];\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  /** An array relationship */\n  files: Array<Message_File>;\n  /** An aggregate relationship */\n  files_aggregate: Message_File_Aggregate;\n  id: Scalars['uuid'];\n  /** An object relationship */\n  parent?: Maybe<Message>;\n  parentId?: Maybe<Scalars['uuid']>;\n  /** An array relationship */\n  references: Array<Message>;\n  /** An aggregate relationship */\n  references_aggregate: Message_Aggregate;\n  replyToId?: Maybe<Scalars['uuid']>;\n  /** An object relationship */\n  reply_to?: Maybe<Message>;\n  /** An object relationship */\n  sender: Member;\n  senderId: Scalars['uuid'];\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageChildrenArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageChildren_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageFilesArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageFiles_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageReferencesArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\n/** columns and relationships of \"message\" */\nexport type MessageReferences_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n/** aggregated selection of \"message\" */\nexport type Message_Aggregate = {\n  __typename?: 'message_aggregate';\n  aggregate?: Maybe<Message_Aggregate_Fields>;\n  nodes: Array<Message>;\n};\n\nexport type Message_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Message_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Message_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Message_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Message_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"message\" */\nexport type Message_Aggregate_Fields = {\n  __typename?: 'message_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Message_Max_Fields>;\n  min?: Maybe<Message_Min_Fields>;\n};\n\n\n/** aggregate fields of \"message\" */\nexport type Message_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"message\" */\nexport type Message_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Message_Max_Order_By>;\n  min?: InputMaybe<Message_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"message\" */\nexport type Message_Arr_Rel_Insert_Input = {\n  data: Array<Message_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Message_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"message\". All fields are combined with a logical 'AND'. */\nexport type Message_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_Bool_Exp>>;\n  _not?: InputMaybe<Message_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_Bool_Exp>>;\n  body?: InputMaybe<String_Comparison_Exp>;\n  channel?: InputMaybe<Channel_Bool_Exp>;\n  channelId?: InputMaybe<Uuid_Comparison_Exp>;\n  children?: InputMaybe<Message_Bool_Exp>;\n  children_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  deletedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n  files?: InputMaybe<Message_File_Bool_Exp>;\n  files_aggregate?: InputMaybe<Message_File_Aggregate_Bool_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  parent?: InputMaybe<Message_Bool_Exp>;\n  parentId?: InputMaybe<Uuid_Comparison_Exp>;\n  references?: InputMaybe<Message_Bool_Exp>;\n  references_aggregate?: InputMaybe<Message_Aggregate_Bool_Exp>;\n  replyToId?: InputMaybe<Uuid_Comparison_Exp>;\n  reply_to?: InputMaybe<Message_Bool_Exp>;\n  sender?: InputMaybe<Member_Bool_Exp>;\n  senderId?: InputMaybe<Uuid_Comparison_Exp>;\n  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"message\" */\nexport enum Message_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  MessagePkey = 'message_pkey'\n}\n\n/** columns and relationships of \"message_file\" */\nexport type Message_File = {\n  __typename?: 'message_file';\n  /** An object relationship */\n  file: File;\n  fileId: Scalars['uuid'];\n  id: Scalars['uuid'];\n  /** An object relationship */\n  message: Message;\n  messageId: Scalars['uuid'];\n};\n\n/** aggregated selection of \"message_file\" */\nexport type Message_File_Aggregate = {\n  __typename?: 'message_file_aggregate';\n  aggregate?: Maybe<Message_File_Aggregate_Fields>;\n  nodes: Array<Message_File>;\n};\n\nexport type Message_File_Aggregate_Bool_Exp = {\n  count?: InputMaybe<Message_File_Aggregate_Bool_Exp_Count>;\n};\n\nexport type Message_File_Aggregate_Bool_Exp_Count = {\n  arguments?: InputMaybe<Array<Message_File_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n  filter?: InputMaybe<Message_File_Bool_Exp>;\n  predicate: Int_Comparison_Exp;\n};\n\n/** aggregate fields of \"message_file\" */\nexport type Message_File_Aggregate_Fields = {\n  __typename?: 'message_file_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Message_File_Max_Fields>;\n  min?: Maybe<Message_File_Min_Fields>;\n};\n\n\n/** aggregate fields of \"message_file\" */\nexport type Message_File_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_File_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"message_file\" */\nexport type Message_File_Aggregate_Order_By = {\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Message_File_Max_Order_By>;\n  min?: InputMaybe<Message_File_Min_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"message_file\" */\nexport type Message_File_Arr_Rel_Insert_Input = {\n  data: Array<Message_File_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Message_File_On_Conflict>;\n};\n\n/** Boolean expression to filter rows from the table \"message_file\". All fields are combined with a logical 'AND'. */\nexport type Message_File_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_File_Bool_Exp>>;\n  _not?: InputMaybe<Message_File_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_File_Bool_Exp>>;\n  file?: InputMaybe<File_Bool_Exp>;\n  fileId?: InputMaybe<Uuid_Comparison_Exp>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  message?: InputMaybe<Message_Bool_Exp>;\n  messageId?: InputMaybe<Uuid_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"message_file\" */\nexport enum Message_File_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  MessageFileIdKey = 'message_file_id_key',\n  /** unique or primary key constraint on columns \"message_id\", \"file_id\" */\n  MessageFilePkey = 'message_file_pkey'\n}\n\n/** input type for inserting data into table \"message_file\" */\nexport type Message_File_Insert_Input = {\n  file?: InputMaybe<File_Obj_Rel_Insert_Input>;\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  message?: InputMaybe<Message_Obj_Rel_Insert_Input>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** aggregate max on columns */\nexport type Message_File_Max_Fields = {\n  __typename?: 'message_file_max_fields';\n  fileId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  messageId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by max() on columns of table \"message_file\" */\nexport type Message_File_Max_Order_By = {\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  messageId?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Message_File_Min_Fields = {\n  __typename?: 'message_file_min_fields';\n  fileId?: Maybe<Scalars['uuid']>;\n  id?: Maybe<Scalars['uuid']>;\n  messageId?: Maybe<Scalars['uuid']>;\n};\n\n/** order by min() on columns of table \"message_file\" */\nexport type Message_File_Min_Order_By = {\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  messageId?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"message_file\" */\nexport type Message_File_Mutation_Response = {\n  __typename?: 'message_file_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Message_File>;\n};\n\n/** on_conflict condition type for table \"message_file\" */\nexport type Message_File_On_Conflict = {\n  constraint: Message_File_Constraint;\n  update_columns?: Array<Message_File_Update_Column>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"message_file\". */\nexport type Message_File_Order_By = {\n  file?: InputMaybe<File_Order_By>;\n  fileId?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  message?: InputMaybe<Message_Order_By>;\n  messageId?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: message_file */\nexport type Message_File_Pk_Columns_Input = {\n  fileId: Scalars['uuid'];\n  messageId: Scalars['uuid'];\n};\n\n/** select columns of table \"message_file\" */\nexport enum Message_File_Select_Column {\n  /** column name */\n  FileId = 'fileId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MessageId = 'messageId'\n}\n\n/** input type for updating data in table \"message_file\" */\nexport type Message_File_Set_Input = {\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** Streaming cursor of the table \"message_file\" */\nexport type Message_File_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_File_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_File_Stream_Cursor_Value_Input = {\n  fileId?: InputMaybe<Scalars['uuid']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** update columns of table \"message_file\" */\nexport enum Message_File_Update_Column {\n  /** column name */\n  FileId = 'fileId',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MessageId = 'messageId'\n}\n\nexport type Message_File_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Message_File_Set_Input>;\n  where: Message_File_Bool_Exp;\n};\n\n/** input type for inserting data into table \"message\" */\nexport type Message_Insert_Input = {\n  body?: InputMaybe<Scalars['String']>;\n  channel?: InputMaybe<Channel_Obj_Rel_Insert_Input>;\n  channelId?: InputMaybe<Scalars['uuid']>;\n  children?: InputMaybe<Message_Arr_Rel_Insert_Input>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  files?: InputMaybe<Message_File_Arr_Rel_Insert_Input>;\n  id?: InputMaybe<Scalars['uuid']>;\n  parent?: InputMaybe<Message_Obj_Rel_Insert_Input>;\n  parentId?: InputMaybe<Scalars['uuid']>;\n  references?: InputMaybe<Message_Arr_Rel_Insert_Input>;\n  replyToId?: InputMaybe<Scalars['uuid']>;\n  reply_to?: InputMaybe<Message_Obj_Rel_Insert_Input>;\n  sender?: InputMaybe<Member_Obj_Rel_Insert_Input>;\n  senderId?: InputMaybe<Scalars['uuid']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** aggregate max on columns */\nexport type Message_Max_Fields = {\n  __typename?: 'message_max_fields';\n  body?: Maybe<Scalars['String']>;\n  channelId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  parentId?: Maybe<Scalars['uuid']>;\n  replyToId?: Maybe<Scalars['uuid']>;\n  senderId?: Maybe<Scalars['uuid']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by max() on columns of table \"message\" */\nexport type Message_Max_Order_By = {\n  body?: InputMaybe<Order_By>;\n  channelId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  parentId?: InputMaybe<Order_By>;\n  replyToId?: InputMaybe<Order_By>;\n  senderId?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Message_Min_Fields = {\n  __typename?: 'message_min_fields';\n  body?: Maybe<Scalars['String']>;\n  channelId?: Maybe<Scalars['uuid']>;\n  createdAt?: Maybe<Scalars['timestamptz']>;\n  deletedAt?: Maybe<Scalars['timestamptz']>;\n  id?: Maybe<Scalars['uuid']>;\n  parentId?: Maybe<Scalars['uuid']>;\n  replyToId?: Maybe<Scalars['uuid']>;\n  senderId?: Maybe<Scalars['uuid']>;\n  updatedAt?: Maybe<Scalars['timestamptz']>;\n};\n\n/** order by min() on columns of table \"message\" */\nexport type Message_Min_Order_By = {\n  body?: InputMaybe<Order_By>;\n  channelId?: InputMaybe<Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  parentId?: InputMaybe<Order_By>;\n  replyToId?: InputMaybe<Order_By>;\n  senderId?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"message\" */\nexport type Message_Mutation_Response = {\n  __typename?: 'message_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Message>;\n};\n\n/** input type for inserting object relation for remote table \"message\" */\nexport type Message_Obj_Rel_Insert_Input = {\n  data: Message_Insert_Input;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Message_On_Conflict>;\n};\n\n/** on_conflict condition type for table \"message\" */\nexport type Message_On_Conflict = {\n  constraint: Message_Constraint;\n  update_columns?: Array<Message_Update_Column>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"message\". */\nexport type Message_Order_By = {\n  body?: InputMaybe<Order_By>;\n  channel?: InputMaybe<Channel_Order_By>;\n  channelId?: InputMaybe<Order_By>;\n  children_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  createdAt?: InputMaybe<Order_By>;\n  deletedAt?: InputMaybe<Order_By>;\n  files_aggregate?: InputMaybe<Message_File_Aggregate_Order_By>;\n  id?: InputMaybe<Order_By>;\n  parent?: InputMaybe<Message_Order_By>;\n  parentId?: InputMaybe<Order_By>;\n  references_aggregate?: InputMaybe<Message_Aggregate_Order_By>;\n  replyToId?: InputMaybe<Order_By>;\n  reply_to?: InputMaybe<Message_Order_By>;\n  sender?: InputMaybe<Member_Order_By>;\n  senderId?: InputMaybe<Order_By>;\n  updatedAt?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: message */\nexport type Message_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** columns and relationships of \"message_reaction\" */\nexport type Message_Reaction = {\n  __typename?: 'message_reaction';\n  id: Scalars['uuid'];\n  messageId: Scalars['uuid'];\n  reactionId: Scalars['uuid'];\n};\n\n/** aggregated selection of \"message_reaction\" */\nexport type Message_Reaction_Aggregate = {\n  __typename?: 'message_reaction_aggregate';\n  aggregate?: Maybe<Message_Reaction_Aggregate_Fields>;\n  nodes: Array<Message_Reaction>;\n};\n\n/** aggregate fields of \"message_reaction\" */\nexport type Message_Reaction_Aggregate_Fields = {\n  __typename?: 'message_reaction_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Message_Reaction_Max_Fields>;\n  min?: Maybe<Message_Reaction_Min_Fields>;\n};\n\n\n/** aggregate fields of \"message_reaction\" */\nexport type Message_Reaction_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Message_Reaction_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Boolean expression to filter rows from the table \"message_reaction\". All fields are combined with a logical 'AND'. */\nexport type Message_Reaction_Bool_Exp = {\n  _and?: InputMaybe<Array<Message_Reaction_Bool_Exp>>;\n  _not?: InputMaybe<Message_Reaction_Bool_Exp>;\n  _or?: InputMaybe<Array<Message_Reaction_Bool_Exp>>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  messageId?: InputMaybe<Uuid_Comparison_Exp>;\n  reactionId?: InputMaybe<Uuid_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"message_reaction\" */\nexport enum Message_Reaction_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  MessageReactionIdKey = 'message_reaction_id_key',\n  /** unique or primary key constraint on columns \"message_id\", \"reaction_id\" */\n  MessageReactionPkey = 'message_reaction_pkey'\n}\n\n/** input type for inserting data into table \"message_reaction\" */\nexport type Message_Reaction_Insert_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n  reactionId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** aggregate max on columns */\nexport type Message_Reaction_Max_Fields = {\n  __typename?: 'message_reaction_max_fields';\n  id?: Maybe<Scalars['uuid']>;\n  messageId?: Maybe<Scalars['uuid']>;\n  reactionId?: Maybe<Scalars['uuid']>;\n};\n\n/** aggregate min on columns */\nexport type Message_Reaction_Min_Fields = {\n  __typename?: 'message_reaction_min_fields';\n  id?: Maybe<Scalars['uuid']>;\n  messageId?: Maybe<Scalars['uuid']>;\n  reactionId?: Maybe<Scalars['uuid']>;\n};\n\n/** response of any mutation on the table \"message_reaction\" */\nexport type Message_Reaction_Mutation_Response = {\n  __typename?: 'message_reaction_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Message_Reaction>;\n};\n\n/** on_conflict condition type for table \"message_reaction\" */\nexport type Message_Reaction_On_Conflict = {\n  constraint: Message_Reaction_Constraint;\n  update_columns?: Array<Message_Reaction_Update_Column>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"message_reaction\". */\nexport type Message_Reaction_Order_By = {\n  id?: InputMaybe<Order_By>;\n  messageId?: InputMaybe<Order_By>;\n  reactionId?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: message_reaction */\nexport type Message_Reaction_Pk_Columns_Input = {\n  messageId: Scalars['uuid'];\n  reactionId: Scalars['uuid'];\n};\n\n/** select columns of table \"message_reaction\" */\nexport enum Message_Reaction_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MessageId = 'messageId',\n  /** column name */\n  ReactionId = 'reactionId'\n}\n\n/** input type for updating data in table \"message_reaction\" */\nexport type Message_Reaction_Set_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n  reactionId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** Streaming cursor of the table \"message_reaction\" */\nexport type Message_Reaction_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_Reaction_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_Reaction_Stream_Cursor_Value_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  messageId?: InputMaybe<Scalars['uuid']>;\n  reactionId?: InputMaybe<Scalars['uuid']>;\n};\n\n/** update columns of table \"message_reaction\" */\nexport enum Message_Reaction_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  MessageId = 'messageId',\n  /** column name */\n  ReactionId = 'reactionId'\n}\n\nexport type Message_Reaction_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Message_Reaction_Set_Input>;\n  where: Message_Reaction_Bool_Exp;\n};\n\n/** select columns of table \"message\" */\nexport enum Message_Select_Column {\n  /** column name */\n  Body = 'body',\n  /** column name */\n  ChannelId = 'channelId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  ParentId = 'parentId',\n  /** column name */\n  ReplyToId = 'replyToId',\n  /** column name */\n  SenderId = 'senderId',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\n/** input type for updating data in table \"message\" */\nexport type Message_Set_Input = {\n  body?: InputMaybe<Scalars['String']>;\n  channelId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  parentId?: InputMaybe<Scalars['uuid']>;\n  replyToId?: InputMaybe<Scalars['uuid']>;\n  senderId?: InputMaybe<Scalars['uuid']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** Streaming cursor of the table \"message\" */\nexport type Message_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Message_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Message_Stream_Cursor_Value_Input = {\n  body?: InputMaybe<Scalars['String']>;\n  channelId?: InputMaybe<Scalars['uuid']>;\n  createdAt?: InputMaybe<Scalars['timestamptz']>;\n  deletedAt?: InputMaybe<Scalars['timestamptz']>;\n  id?: InputMaybe<Scalars['uuid']>;\n  parentId?: InputMaybe<Scalars['uuid']>;\n  replyToId?: InputMaybe<Scalars['uuid']>;\n  senderId?: InputMaybe<Scalars['uuid']>;\n  updatedAt?: InputMaybe<Scalars['timestamptz']>;\n};\n\n/** update columns of table \"message\" */\nexport enum Message_Update_Column {\n  /** column name */\n  Body = 'body',\n  /** column name */\n  ChannelId = 'channelId',\n  /** column name */\n  CreatedAt = 'createdAt',\n  /** column name */\n  DeletedAt = 'deletedAt',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  ParentId = 'parentId',\n  /** column name */\n  ReplyToId = 'replyToId',\n  /** column name */\n  SenderId = 'senderId',\n  /** column name */\n  UpdatedAt = 'updatedAt'\n}\n\nexport type Message_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Message_Set_Input>;\n  where: Message_Bool_Exp;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  /** delete data from the table: \"app\" */\n  delete_app?: Maybe<App_Mutation_Response>;\n  /** delete single row from the table: \"app\" */\n  delete_app_by_pk?: Maybe<App>;\n  /** delete data from the table: \"channel\" */\n  delete_channel?: Maybe<Channel_Mutation_Response>;\n  /** delete single row from the table: \"channel\" */\n  delete_channel_by_pk?: Maybe<Channel>;\n  /** delete data from the table: \"customer\" */\n  delete_customer?: Maybe<Customer_Mutation_Response>;\n  /** delete single row from the table: \"customer\" */\n  delete_customer_by_pk?: Maybe<Customer>;\n  /** delete data from the table: \"customer_role\" */\n  delete_customer_role?: Maybe<Customer_Role_Mutation_Response>;\n  /** delete single row from the table: \"customer_role\" */\n  delete_customer_role_by_pk?: Maybe<Customer_Role>;\n  /** delete data from the table: \"file\" */\n  delete_file?: Maybe<File_Mutation_Response>;\n  /** delete single row from the table: \"file\" */\n  delete_file_by_pk?: Maybe<File>;\n  /** delete data from the table: \"file_service\" */\n  delete_file_service?: Maybe<File_Service_Mutation_Response>;\n  /** delete single row from the table: \"file_service\" */\n  delete_file_service_by_pk?: Maybe<File_Service>;\n  /** delete data from the table: \"member\" */\n  delete_member?: Maybe<Member_Mutation_Response>;\n  /** delete single row from the table: \"member\" */\n  delete_member_by_pk?: Maybe<Member>;\n  /** delete data from the table: \"member_channel\" */\n  delete_member_channel?: Maybe<Member_Channel_Mutation_Response>;\n  /** delete single row from the table: \"member_channel\" */\n  delete_member_channel_by_pk?: Maybe<Member_Channel>;\n  /** delete data from the table: \"member_file\" */\n  delete_member_file?: Maybe<Member_File_Mutation_Response>;\n  /** delete single row from the table: \"member_file\" */\n  delete_member_file_by_pk?: Maybe<Member_File>;\n  /** delete data from the table: \"message\" */\n  delete_message?: Maybe<Message_Mutation_Response>;\n  /** delete single row from the table: \"message\" */\n  delete_message_by_pk?: Maybe<Message>;\n  /** delete data from the table: \"message_file\" */\n  delete_message_file?: Maybe<Message_File_Mutation_Response>;\n  /** delete single row from the table: \"message_file\" */\n  delete_message_file_by_pk?: Maybe<Message_File>;\n  /** delete data from the table: \"message_reaction\" */\n  delete_message_reaction?: Maybe<Message_Reaction_Mutation_Response>;\n  /** delete single row from the table: \"message_reaction\" */\n  delete_message_reaction_by_pk?: Maybe<Message_Reaction>;\n  /** delete data from the table: \"reaction\" */\n  delete_reaction?: Maybe<Reaction_Mutation_Response>;\n  /** delete single row from the table: \"reaction\" */\n  delete_reaction_by_pk?: Maybe<Reaction>;\n  /** insert data into the table: \"app\" */\n  insert_app?: Maybe<App_Mutation_Response>;\n  /** insert a single row into the table: \"app\" */\n  insert_app_one?: Maybe<App>;\n  /** insert data into the table: \"channel\" */\n  insert_channel?: Maybe<Channel_Mutation_Response>;\n  /** insert a single row into the table: \"channel\" */\n  insert_channel_one?: Maybe<Channel>;\n  /** insert data into the table: \"customer\" */\n  insert_customer?: Maybe<Customer_Mutation_Response>;\n  /** insert a single row into the table: \"customer\" */\n  insert_customer_one?: Maybe<Customer>;\n  /** insert data into the table: \"customer_role\" */\n  insert_customer_role?: Maybe<Customer_Role_Mutation_Response>;\n  /** insert a single row into the table: \"customer_role\" */\n  insert_customer_role_one?: Maybe<Customer_Role>;\n  /** insert data into the table: \"file\" */\n  insert_file?: Maybe<File_Mutation_Response>;\n  /** insert a single row into the table: \"file\" */\n  insert_file_one?: Maybe<File>;\n  /** insert data into the table: \"file_service\" */\n  insert_file_service?: Maybe<File_Service_Mutation_Response>;\n  /** insert a single row into the table: \"file_service\" */\n  insert_file_service_one?: Maybe<File_Service>;\n  /** insert data into the table: \"member\" */\n  insert_member?: Maybe<Member_Mutation_Response>;\n  /** insert data into the table: \"member_channel\" */\n  insert_member_channel?: Maybe<Member_Channel_Mutation_Response>;\n  /** insert a single row into the table: \"member_channel\" */\n  insert_member_channel_one?: Maybe<Member_Channel>;\n  /** insert data into the table: \"member_file\" */\n  insert_member_file?: Maybe<Member_File_Mutation_Response>;\n  /** insert a single row into the table: \"member_file\" */\n  insert_member_file_one?: Maybe<Member_File>;\n  /** insert a single row into the table: \"member\" */\n  insert_member_one?: Maybe<Member>;\n  /** insert data into the table: \"message\" */\n  insert_message?: Maybe<Message_Mutation_Response>;\n  /** insert data into the table: \"message_file\" */\n  insert_message_file?: Maybe<Message_File_Mutation_Response>;\n  /** insert a single row into the table: \"message_file\" */\n  insert_message_file_one?: Maybe<Message_File>;\n  /** insert a single row into the table: \"message\" */\n  insert_message_one?: Maybe<Message>;\n  /** insert data into the table: \"message_reaction\" */\n  insert_message_reaction?: Maybe<Message_Reaction_Mutation_Response>;\n  /** insert a single row into the table: \"message_reaction\" */\n  insert_message_reaction_one?: Maybe<Message_Reaction>;\n  /** insert data into the table: \"reaction\" */\n  insert_reaction?: Maybe<Reaction_Mutation_Response>;\n  /** insert a single row into the table: \"reaction\" */\n  insert_reaction_one?: Maybe<Reaction>;\n  /** update data of the table: \"app\" */\n  update_app?: Maybe<App_Mutation_Response>;\n  /** update single row of the table: \"app\" */\n  update_app_by_pk?: Maybe<App>;\n  /** update multiples rows of table: \"app\" */\n  update_app_many?: Maybe<Array<Maybe<App_Mutation_Response>>>;\n  /** update data of the table: \"channel\" */\n  update_channel?: Maybe<Channel_Mutation_Response>;\n  /** update single row of the table: \"channel\" */\n  update_channel_by_pk?: Maybe<Channel>;\n  /** update multiples rows of table: \"channel\" */\n  update_channel_many?: Maybe<Array<Maybe<Channel_Mutation_Response>>>;\n  /** update data of the table: \"customer\" */\n  update_customer?: Maybe<Customer_Mutation_Response>;\n  /** update single row of the table: \"customer\" */\n  update_customer_by_pk?: Maybe<Customer>;\n  /** update multiples rows of table: \"customer\" */\n  update_customer_many?: Maybe<Array<Maybe<Customer_Mutation_Response>>>;\n  /** update data of the table: \"customer_role\" */\n  update_customer_role?: Maybe<Customer_Role_Mutation_Response>;\n  /** update single row of the table: \"customer_role\" */\n  update_customer_role_by_pk?: Maybe<Customer_Role>;\n  /** update multiples rows of table: \"customer_role\" */\n  update_customer_role_many?: Maybe<Array<Maybe<Customer_Role_Mutation_Response>>>;\n  /** update data of the table: \"file\" */\n  update_file?: Maybe<File_Mutation_Response>;\n  /** update single row of the table: \"file\" */\n  update_file_by_pk?: Maybe<File>;\n  /** update multiples rows of table: \"file\" */\n  update_file_many?: Maybe<Array<Maybe<File_Mutation_Response>>>;\n  /** update data of the table: \"file_service\" */\n  update_file_service?: Maybe<File_Service_Mutation_Response>;\n  /** update single row of the table: \"file_service\" */\n  update_file_service_by_pk?: Maybe<File_Service>;\n  /** update multiples rows of table: \"file_service\" */\n  update_file_service_many?: Maybe<Array<Maybe<File_Service_Mutation_Response>>>;\n  /** update data of the table: \"member\" */\n  update_member?: Maybe<Member_Mutation_Response>;\n  /** update single row of the table: \"member\" */\n  update_member_by_pk?: Maybe<Member>;\n  /** update data of the table: \"member_channel\" */\n  update_member_channel?: Maybe<Member_Channel_Mutation_Response>;\n  /** update single row of the table: \"member_channel\" */\n  update_member_channel_by_pk?: Maybe<Member_Channel>;\n  /** update multiples rows of table: \"member_channel\" */\n  update_member_channel_many?: Maybe<Array<Maybe<Member_Channel_Mutation_Response>>>;\n  /** update data of the table: \"member_file\" */\n  update_member_file?: Maybe<Member_File_Mutation_Response>;\n  /** update single row of the table: \"member_file\" */\n  update_member_file_by_pk?: Maybe<Member_File>;\n  /** update multiples rows of table: \"member_file\" */\n  update_member_file_many?: Maybe<Array<Maybe<Member_File_Mutation_Response>>>;\n  /** update multiples rows of table: \"member\" */\n  update_member_many?: Maybe<Array<Maybe<Member_Mutation_Response>>>;\n  /** update data of the table: \"message\" */\n  update_message?: Maybe<Message_Mutation_Response>;\n  /** update single row of the table: \"message\" */\n  update_message_by_pk?: Maybe<Message>;\n  /** update data of the table: \"message_file\" */\n  update_message_file?: Maybe<Message_File_Mutation_Response>;\n  /** update single row of the table: \"message_file\" */\n  update_message_file_by_pk?: Maybe<Message_File>;\n  /** update multiples rows of table: \"message_file\" */\n  update_message_file_many?: Maybe<Array<Maybe<Message_File_Mutation_Response>>>;\n  /** update multiples rows of table: \"message\" */\n  update_message_many?: Maybe<Array<Maybe<Message_Mutation_Response>>>;\n  /** update data of the table: \"message_reaction\" */\n  update_message_reaction?: Maybe<Message_Reaction_Mutation_Response>;\n  /** update single row of the table: \"message_reaction\" */\n  update_message_reaction_by_pk?: Maybe<Message_Reaction>;\n  /** update multiples rows of table: \"message_reaction\" */\n  update_message_reaction_many?: Maybe<Array<Maybe<Message_Reaction_Mutation_Response>>>;\n  /** update data of the table: \"reaction\" */\n  update_reaction?: Maybe<Reaction_Mutation_Response>;\n  /** update single row of the table: \"reaction\" */\n  update_reaction_by_pk?: Maybe<Reaction>;\n  /** update multiples rows of table: \"reaction\" */\n  update_reaction_many?: Maybe<Array<Maybe<Reaction_Mutation_Response>>>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_AppArgs = {\n  where: App_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_App_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_ChannelArgs = {\n  where: Channel_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Channel_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_CustomerArgs = {\n  where: Customer_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Customer_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Customer_RoleArgs = {\n  where: Customer_Role_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Customer_Role_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_FileArgs = {\n  where: File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_File_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_File_ServiceArgs = {\n  where: File_Service_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_File_Service_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_MemberArgs = {\n  where: Member_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Member_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Member_ChannelArgs = {\n  where: Member_Channel_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Member_Channel_By_PkArgs = {\n  channelId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Member_FileArgs = {\n  where: Member_File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Member_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_MessageArgs = {\n  where: Message_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Message_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Message_FileArgs = {\n  where: Message_File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Message_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  messageId: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Message_ReactionArgs = {\n  where: Message_Reaction_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Message_Reaction_By_PkArgs = {\n  messageId: Scalars['uuid'];\n  reactionId: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_ReactionArgs = {\n  where: Reaction_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Reaction_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_AppArgs = {\n  objects: Array<App_Insert_Input>;\n  on_conflict?: InputMaybe<App_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_App_OneArgs = {\n  object: App_Insert_Input;\n  on_conflict?: InputMaybe<App_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_ChannelArgs = {\n  objects: Array<Channel_Insert_Input>;\n  on_conflict?: InputMaybe<Channel_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Channel_OneArgs = {\n  object: Channel_Insert_Input;\n  on_conflict?: InputMaybe<Channel_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_CustomerArgs = {\n  objects: Array<Customer_Insert_Input>;\n  on_conflict?: InputMaybe<Customer_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Customer_OneArgs = {\n  object: Customer_Insert_Input;\n  on_conflict?: InputMaybe<Customer_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Customer_RoleArgs = {\n  objects: Array<Customer_Role_Insert_Input>;\n  on_conflict?: InputMaybe<Customer_Role_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Customer_Role_OneArgs = {\n  object: Customer_Role_Insert_Input;\n  on_conflict?: InputMaybe<Customer_Role_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_FileArgs = {\n  objects: Array<File_Insert_Input>;\n  on_conflict?: InputMaybe<File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_File_OneArgs = {\n  object: File_Insert_Input;\n  on_conflict?: InputMaybe<File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_File_ServiceArgs = {\n  objects: Array<File_Service_Insert_Input>;\n  on_conflict?: InputMaybe<File_Service_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_File_Service_OneArgs = {\n  object: File_Service_Insert_Input;\n  on_conflict?: InputMaybe<File_Service_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_MemberArgs = {\n  objects: Array<Member_Insert_Input>;\n  on_conflict?: InputMaybe<Member_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Member_ChannelArgs = {\n  objects: Array<Member_Channel_Insert_Input>;\n  on_conflict?: InputMaybe<Member_Channel_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Member_Channel_OneArgs = {\n  object: Member_Channel_Insert_Input;\n  on_conflict?: InputMaybe<Member_Channel_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Member_FileArgs = {\n  objects: Array<Member_File_Insert_Input>;\n  on_conflict?: InputMaybe<Member_File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Member_File_OneArgs = {\n  object: Member_File_Insert_Input;\n  on_conflict?: InputMaybe<Member_File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Member_OneArgs = {\n  object: Member_Insert_Input;\n  on_conflict?: InputMaybe<Member_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_MessageArgs = {\n  objects: Array<Message_Insert_Input>;\n  on_conflict?: InputMaybe<Message_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Message_FileArgs = {\n  objects: Array<Message_File_Insert_Input>;\n  on_conflict?: InputMaybe<Message_File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Message_File_OneArgs = {\n  object: Message_File_Insert_Input;\n  on_conflict?: InputMaybe<Message_File_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Message_OneArgs = {\n  object: Message_Insert_Input;\n  on_conflict?: InputMaybe<Message_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Message_ReactionArgs = {\n  objects: Array<Message_Reaction_Insert_Input>;\n  on_conflict?: InputMaybe<Message_Reaction_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Message_Reaction_OneArgs = {\n  object: Message_Reaction_Insert_Input;\n  on_conflict?: InputMaybe<Message_Reaction_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_ReactionArgs = {\n  objects: Array<Reaction_Insert_Input>;\n  on_conflict?: InputMaybe<Reaction_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Reaction_OneArgs = {\n  object: Reaction_Insert_Input;\n  on_conflict?: InputMaybe<Reaction_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_AppArgs = {\n  _append?: InputMaybe<App_Append_Input>;\n  _delete_at_path?: InputMaybe<App_Delete_At_Path_Input>;\n  _delete_elem?: InputMaybe<App_Delete_Elem_Input>;\n  _delete_key?: InputMaybe<App_Delete_Key_Input>;\n  _prepend?: InputMaybe<App_Prepend_Input>;\n  _set?: InputMaybe<App_Set_Input>;\n  where: App_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_App_By_PkArgs = {\n  _append?: InputMaybe<App_Append_Input>;\n  _delete_at_path?: InputMaybe<App_Delete_At_Path_Input>;\n  _delete_elem?: InputMaybe<App_Delete_Elem_Input>;\n  _delete_key?: InputMaybe<App_Delete_Key_Input>;\n  _prepend?: InputMaybe<App_Prepend_Input>;\n  _set?: InputMaybe<App_Set_Input>;\n  pk_columns: App_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_App_ManyArgs = {\n  updates: Array<App_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_ChannelArgs = {\n  _set?: InputMaybe<Channel_Set_Input>;\n  where: Channel_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Channel_By_PkArgs = {\n  _set?: InputMaybe<Channel_Set_Input>;\n  pk_columns: Channel_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Channel_ManyArgs = {\n  updates: Array<Channel_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_CustomerArgs = {\n  _set?: InputMaybe<Customer_Set_Input>;\n  where: Customer_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Customer_By_PkArgs = {\n  _set?: InputMaybe<Customer_Set_Input>;\n  pk_columns: Customer_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Customer_ManyArgs = {\n  updates: Array<Customer_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Customer_RoleArgs = {\n  _set?: InputMaybe<Customer_Role_Set_Input>;\n  where: Customer_Role_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Customer_Role_By_PkArgs = {\n  _set?: InputMaybe<Customer_Role_Set_Input>;\n  pk_columns: Customer_Role_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Customer_Role_ManyArgs = {\n  updates: Array<Customer_Role_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_FileArgs = {\n  _set?: InputMaybe<File_Set_Input>;\n  where: File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_File_By_PkArgs = {\n  _set?: InputMaybe<File_Set_Input>;\n  pk_columns: File_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_File_ManyArgs = {\n  updates: Array<File_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_File_ServiceArgs = {\n  _set?: InputMaybe<File_Service_Set_Input>;\n  where: File_Service_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_File_Service_By_PkArgs = {\n  _set?: InputMaybe<File_Service_Set_Input>;\n  pk_columns: File_Service_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_File_Service_ManyArgs = {\n  updates: Array<File_Service_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_MemberArgs = {\n  _set?: InputMaybe<Member_Set_Input>;\n  where: Member_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_By_PkArgs = {\n  _set?: InputMaybe<Member_Set_Input>;\n  pk_columns: Member_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_ChannelArgs = {\n  _set?: InputMaybe<Member_Channel_Set_Input>;\n  where: Member_Channel_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_Channel_By_PkArgs = {\n  _set?: InputMaybe<Member_Channel_Set_Input>;\n  pk_columns: Member_Channel_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_Channel_ManyArgs = {\n  updates: Array<Member_Channel_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_FileArgs = {\n  _set?: InputMaybe<Member_File_Set_Input>;\n  where: Member_File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_File_By_PkArgs = {\n  _set?: InputMaybe<Member_File_Set_Input>;\n  pk_columns: Member_File_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_File_ManyArgs = {\n  updates: Array<Member_File_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Member_ManyArgs = {\n  updates: Array<Member_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_MessageArgs = {\n  _set?: InputMaybe<Message_Set_Input>;\n  where: Message_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_By_PkArgs = {\n  _set?: InputMaybe<Message_Set_Input>;\n  pk_columns: Message_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_FileArgs = {\n  _set?: InputMaybe<Message_File_Set_Input>;\n  where: Message_File_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_File_By_PkArgs = {\n  _set?: InputMaybe<Message_File_Set_Input>;\n  pk_columns: Message_File_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_File_ManyArgs = {\n  updates: Array<Message_File_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_ManyArgs = {\n  updates: Array<Message_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_ReactionArgs = {\n  _set?: InputMaybe<Message_Reaction_Set_Input>;\n  where: Message_Reaction_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_Reaction_By_PkArgs = {\n  _set?: InputMaybe<Message_Reaction_Set_Input>;\n  pk_columns: Message_Reaction_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Message_Reaction_ManyArgs = {\n  updates: Array<Message_Reaction_Updates>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_ReactionArgs = {\n  _set?: InputMaybe<Reaction_Set_Input>;\n  where: Reaction_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Reaction_By_PkArgs = {\n  _set?: InputMaybe<Reaction_Set_Input>;\n  pk_columns: Reaction_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Reaction_ManyArgs = {\n  updates: Array<Reaction_Updates>;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  /** fetch data from the table: \"app\" */\n  app: Array<App>;\n  /** fetch aggregated fields from the table: \"app\" */\n  app_aggregate: App_Aggregate;\n  /** fetch data from the table: \"app\" using primary key columns */\n  app_by_pk?: Maybe<App>;\n  /** fetch data from the table: \"channel\" */\n  channel: Array<Channel>;\n  /** fetch aggregated fields from the table: \"channel\" */\n  channel_aggregate: Channel_Aggregate;\n  /** fetch data from the table: \"channel\" using primary key columns */\n  channel_by_pk?: Maybe<Channel>;\n  /** fetch data from the table: \"customer\" */\n  customer: Array<Customer>;\n  /** fetch aggregated fields from the table: \"customer\" */\n  customer_aggregate: Customer_Aggregate;\n  /** fetch data from the table: \"customer\" using primary key columns */\n  customer_by_pk?: Maybe<Customer>;\n  /** fetch data from the table: \"customer_role\" */\n  customer_role: Array<Customer_Role>;\n  /** fetch aggregated fields from the table: \"customer_role\" */\n  customer_role_aggregate: Customer_Role_Aggregate;\n  /** fetch data from the table: \"customer_role\" using primary key columns */\n  customer_role_by_pk?: Maybe<Customer_Role>;\n  /** fetch data from the table: \"file\" */\n  file: Array<File>;\n  /** fetch aggregated fields from the table: \"file\" */\n  file_aggregate: File_Aggregate;\n  /** fetch data from the table: \"file\" using primary key columns */\n  file_by_pk?: Maybe<File>;\n  /** fetch data from the table: \"file_service\" */\n  file_service: Array<File_Service>;\n  /** fetch aggregated fields from the table: \"file_service\" */\n  file_service_aggregate: File_Service_Aggregate;\n  /** fetch data from the table: \"file_service\" using primary key columns */\n  file_service_by_pk?: Maybe<File_Service>;\n  /** fetch data from the table: \"member\" */\n  member: Array<Member>;\n  /** fetch aggregated fields from the table: \"member\" */\n  member_aggregate: Member_Aggregate;\n  /** fetch data from the table: \"member\" using primary key columns */\n  member_by_pk?: Maybe<Member>;\n  /** fetch data from the table: \"member_channel\" */\n  member_channel: Array<Member_Channel>;\n  /** fetch aggregated fields from the table: \"member_channel\" */\n  member_channel_aggregate: Member_Channel_Aggregate;\n  /** fetch data from the table: \"member_channel\" using primary key columns */\n  member_channel_by_pk?: Maybe<Member_Channel>;\n  /** fetch data from the table: \"member_file\" */\n  member_file: Array<Member_File>;\n  /** fetch aggregated fields from the table: \"member_file\" */\n  member_file_aggregate: Member_File_Aggregate;\n  /** fetch data from the table: \"member_file\" using primary key columns */\n  member_file_by_pk?: Maybe<Member_File>;\n  /** fetch data from the table: \"message\" */\n  message: Array<Message>;\n  /** fetch aggregated fields from the table: \"message\" */\n  message_aggregate: Message_Aggregate;\n  /** fetch data from the table: \"message\" using primary key columns */\n  message_by_pk?: Maybe<Message>;\n  /** fetch data from the table: \"message_file\" */\n  message_file: Array<Message_File>;\n  /** fetch aggregated fields from the table: \"message_file\" */\n  message_file_aggregate: Message_File_Aggregate;\n  /** fetch data from the table: \"message_file\" using primary key columns */\n  message_file_by_pk?: Maybe<Message_File>;\n  /** fetch data from the table: \"message_reaction\" */\n  message_reaction: Array<Message_Reaction>;\n  /** fetch aggregated fields from the table: \"message_reaction\" */\n  message_reaction_aggregate: Message_Reaction_Aggregate;\n  /** fetch data from the table: \"message_reaction\" using primary key columns */\n  message_reaction_by_pk?: Maybe<Message_Reaction>;\n  /** fetch data from the table: \"reaction\" */\n  reaction: Array<Reaction>;\n  /** fetch aggregated fields from the table: \"reaction\" */\n  reaction_aggregate: Reaction_Aggregate;\n  /** fetch data from the table: \"reaction\" using primary key columns */\n  reaction_by_pk?: Maybe<Reaction>;\n};\n\n\nexport type Query_RootAppArgs = {\n  distinct_on?: InputMaybe<Array<App_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<App_Order_By>>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n\nexport type Query_RootApp_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<App_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<App_Order_By>>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n\nexport type Query_RootApp_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootChannelArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\nexport type Query_RootChannel_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\nexport type Query_RootChannel_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootCustomerArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\nexport type Query_RootCustomer_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\nexport type Query_RootCustomer_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootCustomer_RoleArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Role_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Role_Order_By>>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n\nexport type Query_RootCustomer_Role_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Role_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Role_Order_By>>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n\nexport type Query_RootCustomer_Role_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\nexport type Query_RootFileArgs = {\n  distinct_on?: InputMaybe<Array<File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Order_By>>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n\nexport type Query_RootFile_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Order_By>>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n\nexport type Query_RootFile_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootFile_ServiceArgs = {\n  distinct_on?: InputMaybe<Array<File_Service_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Service_Order_By>>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n\nexport type Query_RootFile_Service_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<File_Service_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Service_Order_By>>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n\nexport type Query_RootFile_Service_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\nexport type Query_RootMemberArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootMember_ChannelArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_Channel_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_Channel_By_PkArgs = {\n  channelId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\nexport type Query_RootMember_FileArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_File_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\nexport type Query_RootMember_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\nexport type Query_RootMessageArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Query_RootMessage_FileArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_File_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  messageId: Scalars['uuid'];\n};\n\n\nexport type Query_RootMessage_ReactionArgs = {\n  distinct_on?: InputMaybe<Array<Message_Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Reaction_Order_By>>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_Reaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Reaction_Order_By>>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n\nexport type Query_RootMessage_Reaction_By_PkArgs = {\n  messageId: Scalars['uuid'];\n  reactionId: Scalars['uuid'];\n};\n\n\nexport type Query_RootReactionArgs = {\n  distinct_on?: InputMaybe<Array<Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Reaction_Order_By>>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n\nexport type Query_RootReaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Reaction_Order_By>>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n\nexport type Query_RootReaction_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n/** columns and relationships of \"reaction\" */\nexport type Reaction = {\n  __typename?: 'reaction';\n  id: Scalars['uuid'];\n  name: Scalars['String'];\n};\n\n/** aggregated selection of \"reaction\" */\nexport type Reaction_Aggregate = {\n  __typename?: 'reaction_aggregate';\n  aggregate?: Maybe<Reaction_Aggregate_Fields>;\n  nodes: Array<Reaction>;\n};\n\n/** aggregate fields of \"reaction\" */\nexport type Reaction_Aggregate_Fields = {\n  __typename?: 'reaction_aggregate_fields';\n  count: Scalars['Int'];\n  max?: Maybe<Reaction_Max_Fields>;\n  min?: Maybe<Reaction_Min_Fields>;\n};\n\n\n/** aggregate fields of \"reaction\" */\nexport type Reaction_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Reaction_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Boolean expression to filter rows from the table \"reaction\". All fields are combined with a logical 'AND'. */\nexport type Reaction_Bool_Exp = {\n  _and?: InputMaybe<Array<Reaction_Bool_Exp>>;\n  _not?: InputMaybe<Reaction_Bool_Exp>;\n  _or?: InputMaybe<Array<Reaction_Bool_Exp>>;\n  id?: InputMaybe<Uuid_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"reaction\" */\nexport enum Reaction_Constraint {\n  /** unique or primary key constraint on columns \"id\" */\n  ReactionPkey = 'reaction_pkey'\n}\n\n/** input type for inserting data into table \"reaction\" */\nexport type Reaction_Insert_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Reaction_Max_Fields = {\n  __typename?: 'reaction_max_fields';\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Reaction_Min_Fields = {\n  __typename?: 'reaction_min_fields';\n  id?: Maybe<Scalars['uuid']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"reaction\" */\nexport type Reaction_Mutation_Response = {\n  __typename?: 'reaction_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Reaction>;\n};\n\n/** on_conflict condition type for table \"reaction\" */\nexport type Reaction_On_Conflict = {\n  constraint: Reaction_Constraint;\n  update_columns?: Array<Reaction_Update_Column>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"reaction\". */\nexport type Reaction_Order_By = {\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: reaction */\nexport type Reaction_Pk_Columns_Input = {\n  id: Scalars['uuid'];\n};\n\n/** select columns of table \"reaction\" */\nexport enum Reaction_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"reaction\" */\nexport type Reaction_Set_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** Streaming cursor of the table \"reaction\" */\nexport type Reaction_Stream_Cursor_Input = {\n  /** Stream column input with initial value */\n  initial_value: Reaction_Stream_Cursor_Value_Input;\n  /** cursor ordering */\n  ordering?: InputMaybe<Cursor_Ordering>;\n};\n\n/** Initial value of the column from where the streaming should start */\nexport type Reaction_Stream_Cursor_Value_Input = {\n  id?: InputMaybe<Scalars['uuid']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** update columns of table \"reaction\" */\nexport enum Reaction_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\nexport type Reaction_Updates = {\n  /** sets the columns of the filtered rows to the given values */\n  _set?: InputMaybe<Reaction_Set_Input>;\n  where: Reaction_Bool_Exp;\n};\n\nexport type Subscription_Root = {\n  __typename?: 'subscription_root';\n  /** fetch data from the table: \"app\" */\n  app: Array<App>;\n  /** fetch aggregated fields from the table: \"app\" */\n  app_aggregate: App_Aggregate;\n  /** fetch data from the table: \"app\" using primary key columns */\n  app_by_pk?: Maybe<App>;\n  /** fetch data from the table in a streaming manner: \"app\" */\n  app_stream: Array<App>;\n  /** fetch data from the table: \"channel\" */\n  channel: Array<Channel>;\n  /** fetch aggregated fields from the table: \"channel\" */\n  channel_aggregate: Channel_Aggregate;\n  /** fetch data from the table: \"channel\" using primary key columns */\n  channel_by_pk?: Maybe<Channel>;\n  /** fetch data from the table in a streaming manner: \"channel\" */\n  channel_stream: Array<Channel>;\n  /** fetch data from the table: \"customer\" */\n  customer: Array<Customer>;\n  /** fetch aggregated fields from the table: \"customer\" */\n  customer_aggregate: Customer_Aggregate;\n  /** fetch data from the table: \"customer\" using primary key columns */\n  customer_by_pk?: Maybe<Customer>;\n  /** fetch data from the table: \"customer_role\" */\n  customer_role: Array<Customer_Role>;\n  /** fetch aggregated fields from the table: \"customer_role\" */\n  customer_role_aggregate: Customer_Role_Aggregate;\n  /** fetch data from the table: \"customer_role\" using primary key columns */\n  customer_role_by_pk?: Maybe<Customer_Role>;\n  /** fetch data from the table in a streaming manner: \"customer_role\" */\n  customer_role_stream: Array<Customer_Role>;\n  /** fetch data from the table in a streaming manner: \"customer\" */\n  customer_stream: Array<Customer>;\n  /** fetch data from the table: \"file\" */\n  file: Array<File>;\n  /** fetch aggregated fields from the table: \"file\" */\n  file_aggregate: File_Aggregate;\n  /** fetch data from the table: \"file\" using primary key columns */\n  file_by_pk?: Maybe<File>;\n  /** fetch data from the table: \"file_service\" */\n  file_service: Array<File_Service>;\n  /** fetch aggregated fields from the table: \"file_service\" */\n  file_service_aggregate: File_Service_Aggregate;\n  /** fetch data from the table: \"file_service\" using primary key columns */\n  file_service_by_pk?: Maybe<File_Service>;\n  /** fetch data from the table in a streaming manner: \"file_service\" */\n  file_service_stream: Array<File_Service>;\n  /** fetch data from the table in a streaming manner: \"file\" */\n  file_stream: Array<File>;\n  /** fetch data from the table: \"member\" */\n  member: Array<Member>;\n  /** fetch aggregated fields from the table: \"member\" */\n  member_aggregate: Member_Aggregate;\n  /** fetch data from the table: \"member\" using primary key columns */\n  member_by_pk?: Maybe<Member>;\n  /** fetch data from the table: \"member_channel\" */\n  member_channel: Array<Member_Channel>;\n  /** fetch aggregated fields from the table: \"member_channel\" */\n  member_channel_aggregate: Member_Channel_Aggregate;\n  /** fetch data from the table: \"member_channel\" using primary key columns */\n  member_channel_by_pk?: Maybe<Member_Channel>;\n  /** fetch data from the table in a streaming manner: \"member_channel\" */\n  member_channel_stream: Array<Member_Channel>;\n  /** fetch data from the table: \"member_file\" */\n  member_file: Array<Member_File>;\n  /** fetch aggregated fields from the table: \"member_file\" */\n  member_file_aggregate: Member_File_Aggregate;\n  /** fetch data from the table: \"member_file\" using primary key columns */\n  member_file_by_pk?: Maybe<Member_File>;\n  /** fetch data from the table in a streaming manner: \"member_file\" */\n  member_file_stream: Array<Member_File>;\n  /** fetch data from the table in a streaming manner: \"member\" */\n  member_stream: Array<Member>;\n  /** fetch data from the table: \"message\" */\n  message: Array<Message>;\n  /** fetch aggregated fields from the table: \"message\" */\n  message_aggregate: Message_Aggregate;\n  /** fetch data from the table: \"message\" using primary key columns */\n  message_by_pk?: Maybe<Message>;\n  /** fetch data from the table: \"message_file\" */\n  message_file: Array<Message_File>;\n  /** fetch aggregated fields from the table: \"message_file\" */\n  message_file_aggregate: Message_File_Aggregate;\n  /** fetch data from the table: \"message_file\" using primary key columns */\n  message_file_by_pk?: Maybe<Message_File>;\n  /** fetch data from the table in a streaming manner: \"message_file\" */\n  message_file_stream: Array<Message_File>;\n  /** fetch data from the table: \"message_reaction\" */\n  message_reaction: Array<Message_Reaction>;\n  /** fetch aggregated fields from the table: \"message_reaction\" */\n  message_reaction_aggregate: Message_Reaction_Aggregate;\n  /** fetch data from the table: \"message_reaction\" using primary key columns */\n  message_reaction_by_pk?: Maybe<Message_Reaction>;\n  /** fetch data from the table in a streaming manner: \"message_reaction\" */\n  message_reaction_stream: Array<Message_Reaction>;\n  /** fetch data from the table in a streaming manner: \"message\" */\n  message_stream: Array<Message>;\n  /** fetch data from the table: \"reaction\" */\n  reaction: Array<Reaction>;\n  /** fetch aggregated fields from the table: \"reaction\" */\n  reaction_aggregate: Reaction_Aggregate;\n  /** fetch data from the table: \"reaction\" using primary key columns */\n  reaction_by_pk?: Maybe<Reaction>;\n  /** fetch data from the table in a streaming manner: \"reaction\" */\n  reaction_stream: Array<Reaction>;\n};\n\n\nexport type Subscription_RootAppArgs = {\n  distinct_on?: InputMaybe<Array<App_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<App_Order_By>>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n\nexport type Subscription_RootApp_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<App_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<App_Order_By>>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n\nexport type Subscription_RootApp_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootApp_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<App_Stream_Cursor_Input>>;\n  where?: InputMaybe<App_Bool_Exp>;\n};\n\n\nexport type Subscription_RootChannelArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootChannel_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Channel_Order_By>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootChannel_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootChannel_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Channel_Stream_Cursor_Input>>;\n  where?: InputMaybe<Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomerArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomer_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Order_By>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomer_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootCustomer_RoleArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Role_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Role_Order_By>>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomer_Role_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Customer_Role_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Customer_Role_Order_By>>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomer_Role_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\nexport type Subscription_RootCustomer_Role_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Customer_Role_Stream_Cursor_Input>>;\n  where?: InputMaybe<Customer_Role_Bool_Exp>;\n};\n\n\nexport type Subscription_RootCustomer_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Customer_Stream_Cursor_Input>>;\n  where?: InputMaybe<Customer_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFileArgs = {\n  distinct_on?: InputMaybe<Array<File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Order_By>>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFile_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Order_By>>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFile_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootFile_ServiceArgs = {\n  distinct_on?: InputMaybe<Array<File_Service_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Service_Order_By>>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFile_Service_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<File_Service_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<File_Service_Order_By>>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFile_Service_By_PkArgs = {\n  value: Scalars['String'];\n};\n\n\nexport type Subscription_RootFile_Service_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<File_Service_Stream_Cursor_Input>>;\n  where?: InputMaybe<File_Service_Bool_Exp>;\n};\n\n\nexport type Subscription_RootFile_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<File_Stream_Cursor_Input>>;\n  where?: InputMaybe<File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMemberArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Order_By>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMember_ChannelArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_Channel_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_Channel_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_Channel_Order_By>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_Channel_By_PkArgs = {\n  channelId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMember_Channel_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Member_Channel_Stream_Cursor_Input>>;\n  where?: InputMaybe<Member_Channel_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_FileArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_File_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Member_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Member_File_Order_By>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMember_File_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Member_File_Stream_Cursor_Input>>;\n  where?: InputMaybe<Member_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMember_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Member_Stream_Cursor_Input>>;\n  where?: InputMaybe<Member_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessageArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Order_By>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMessage_FileArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_File_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_File_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_File_Order_By>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_File_By_PkArgs = {\n  fileId: Scalars['uuid'];\n  messageId: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMessage_File_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Message_File_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_File_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_ReactionArgs = {\n  distinct_on?: InputMaybe<Array<Message_Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Reaction_Order_By>>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_Reaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Message_Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Message_Reaction_Order_By>>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_Reaction_By_PkArgs = {\n  messageId: Scalars['uuid'];\n  reactionId: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootMessage_Reaction_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Message_Reaction_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_Reaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootMessage_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Message_Stream_Cursor_Input>>;\n  where?: InputMaybe<Message_Bool_Exp>;\n};\n\n\nexport type Subscription_RootReactionArgs = {\n  distinct_on?: InputMaybe<Array<Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Reaction_Order_By>>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootReaction_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Reaction_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Reaction_Order_By>>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n\nexport type Subscription_RootReaction_By_PkArgs = {\n  id: Scalars['uuid'];\n};\n\n\nexport type Subscription_RootReaction_StreamArgs = {\n  batch_size: Scalars['Int'];\n  cursor: Array<InputMaybe<Reaction_Stream_Cursor_Input>>;\n  where?: InputMaybe<Reaction_Bool_Exp>;\n};\n\n/** Boolean expression to compare columns of type \"timestamptz\". All fields are combined with logical 'AND'. */\nexport type Timestamptz_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['timestamptz']>;\n  _gt?: InputMaybe<Scalars['timestamptz']>;\n  _gte?: InputMaybe<Scalars['timestamptz']>;\n  _in?: InputMaybe<Array<Scalars['timestamptz']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['timestamptz']>;\n  _lte?: InputMaybe<Scalars['timestamptz']>;\n  _neq?: InputMaybe<Scalars['timestamptz']>;\n  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;\n};\n\n/** Boolean expression to compare columns of type \"uuid\". All fields are combined with logical 'AND'. */\nexport type Uuid_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['uuid']>;\n  _gt?: InputMaybe<Scalars['uuid']>;\n  _gte?: InputMaybe<Scalars['uuid']>;\n  _in?: InputMaybe<Array<Scalars['uuid']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['uuid']>;\n  _lte?: InputMaybe<Scalars['uuid']>;\n  _neq?: InputMaybe<Scalars['uuid']>;\n  _nin?: InputMaybe<Array<Scalars['uuid']>>;\n};\n\nexport type AppAuthServiceGetAppByIdQueryVariables = Exact<{\n  appId: Scalars['uuid'];\n  memberId: Scalars['uuid'];\n}>;\n\n\nexport type AppAuthServiceGetAppByIdQuery = { __typename?: 'query_root', app?: { __typename?: 'app', id: any, jwtSecrets?: any | null } | null, member?: { __typename?: 'member', id: any, appId: any } | null };\n\nexport type AuthServiceGetCustomerByEmailQueryVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AuthServiceGetCustomerByEmailQuery = { __typename?: 'query_root', customer: Array<{ __typename?: 'customer', id: any, encryptedPassword?: string | null, appId: any }> };\n\nexport type AuthServiceGetMemberByEmailQueryVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AuthServiceGetMemberByEmailQuery = { __typename?: 'query_root', member: Array<{ __typename?: 'member', id: any, encryptedPassword?: string | null, appId: any }> };\n\n\nexport const AppAuthServiceGetAppByIdDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"AppAuthServiceGetAppById\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"appId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"uuid\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"memberId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"uuid\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"app\"},\"name\":{\"kind\":\"Name\",\"value\":\"app_by_pk\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"appId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"jwtSecrets\"}}]}},{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"member\"},\"name\":{\"kind\":\"Name\",\"value\":\"member_by_pk\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"memberId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"appId\"}}]}}]}}]} as unknown as DocumentNode<AppAuthServiceGetAppByIdQuery, AppAuthServiceGetAppByIdQueryVariables>;\nexport const AuthServiceGetCustomerByEmailDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"AuthServiceGetCustomerByEmail\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"customer\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}}}]}}]}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"encryptedPassword\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"appId\"}}]}}]}}]} as unknown as DocumentNode<AuthServiceGetCustomerByEmailQuery, AuthServiceGetCustomerByEmailQueryVariables>;\nexport const AuthServiceGetMemberByEmailDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"AuthServiceGetMemberByEmail\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"member\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}}}]}}]}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"encryptedPassword\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"appId\"}}]}}]}}]} as unknown as DocumentNode<AuthServiceGetMemberByEmailQuery, AuthServiceGetMemberByEmailQueryVariables>;","export * from \"./gql\"\nexport * from \"./fragment-masking\"","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcrypt\");","module.exports = require(\"graphql-request\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","module.exports = require(\"zod\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nconst developmentCorsOrigins = [\n  'http://localhost:4201',\n  'http://127.0.0.1:4201',\n  'http://localhost:4200',\n  'http://127.0.0.1:4200',\n];\n\nconst corsOrigins = [\n  'https://ychat-dashboard.vercel.app',\n  ...(environment.production ? [] : developmentCorsOrigins),\n];\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\n  app.enableCors({ origin: corsOrigins });\n\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":["AppAuthController","Controller","getAppByIdQuery","gql","AppAuthModule","Module","providers","AppAuthService","controllers","claimKey","jwtTokenSchema","z","string","regex","jwtSecretTypeKeySchema","array","object","algorithm","enum","issuer","audience","optional","key","memberTokenPayloadSchema","iss","uuid","transform","claim","memberId","payload","safeJwtVerify","params","jwt","verify","success","error","validateMemberToken","appId","rawToken","token","replace","parsedPayload","safeParse","decode","Error","data","request","app","member","jwtSecrets","parsedJwtSecrets","jwtSecret","find","secret","this","algorithms","Injectable","AppController","constructor","appService","getData","message","Get","AppService","AppModule","imports","AuthModule","AuthController","authService","login","req","loginCustomer","user","memberLogin","loginMember","encryptPassword","body","password","UseGuards","CustomerAuthGuard","Post","Req","MemberAuthGuard","Body","AuthService","PassportModule","JwtModule","register","privateKey","environment","jwtConstants","signOptions","expiresIn","CustomerStrategy","MemberStrategy","Roles","getCustomerByEmailQuery","getMemberByEmailQuery","jwtService","allowedRoles","Object","values","defaultRole","CUSTOMER","validateCustomer","username","pass","email","customer","encryptedPassword","bcrypt","compare","validateMember","sub","id","sign","MEMBER","hash","saltRounds","JwtService","AuthGuard","PassportStrategy","Strategy","super","usernameField","validate","UnauthorizedException","hasura","GraphQLClient","hasuraEnv","endpoint","headers","production","prod","local","JWT_TOKEN_PRIVATE_KEY","_documentNode","fragmentType","documents","types","AppAuthServiceGetAppByIdDocument","AuthServiceGetCustomerByEmailDocument","AuthServiceGetMemberByEmailDocument","source","App_Constraint","App_Select_Column","App_Update_Column","Channel_Constraint","Channel_Select_Column","Channel_Update_Column","Cursor_Ordering","Customer_Constraint","Customer_Role_Constraint","Customer_Role_Enum","Customer_Role_Select_Column","Customer_Role_Update_Column","Customer_Select_Column","Customer_Update_Column","File_Constraint","File_Select_Column","File_Service_Constraint","File_Service_Enum","File_Service_Select_Column","File_Service_Update_Column","File_Update_Column","Member_Channel_Constraint","Member_Channel_Select_Column","Member_Channel_Update_Column","Member_Constraint","Member_File_Constraint","Member_File_Select_Column","Member_File_Update_Column","Member_Select_Column","Member_Update_Column","Message_Constraint","Message_File_Constraint","Message_File_Select_Column","Message_File_Update_Column","Message_Reaction_Constraint","Message_Reaction_Select_Column","Message_Reaction_Update_Column","Message_Select_Column","Message_Update_Column","Order_By","Reaction_Constraint","Reaction_Select_Column","Reaction_Update_Column","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","corsOrigins","NestFactory","create","setGlobalPrefix","enableCors","origin","port","process","env","PORT","listen","Logger","log","bootstrap"],"sourceRoot":""}